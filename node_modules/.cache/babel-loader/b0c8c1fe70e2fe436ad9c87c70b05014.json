{"remainingRequest":"/Users/Front-End/Desktop/cp-v1.2/node_modules/babel-loader/lib/index.js!/Users/Front-End/Desktop/cp-v1.2/src/router/index.js","dependencies":[{"path":"/Users/Front-End/Desktop/cp-v1.2/src/router/index.js","mtime":1585519361000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBSb3V0ZXIgZnJvbSAndnVlLXJvdXRlcic7CmltcG9ydCB7IFRva2VuU2VydmljZSB9IGZyb20gIi4uL3NlcnZpY2VzL3N0b3JhZ2Uuc2VydmljZSI7ClZ1ZS51c2UoUm91dGVyKTsKCnZhciBIb21lID0gZnVuY3Rpb24gSG9tZSgpIHsKICByZXR1cm4gaW1wb3J0KCIuLi92aWV3cy9Ib21lIik7Cn07Cgp2YXIgQWJvdXQgPSBmdW5jdGlvbiBBYm91dCgpIHsKICByZXR1cm4gaW1wb3J0KCIuLi92aWV3cy9BYm91dCIpOwp9OwoKdmFyIExvZ2luID0gZnVuY3Rpb24gTG9naW4oKSB7CiAgcmV0dXJuIGltcG9ydCgiLi4vdmlld3MvTG9naW4iKTsKfTsKCnZhciBpZkVycm9yID0gZnVuY3Rpb24gaWZFcnJvcih0bywgZnJvbSwgbmV4dCkgewogIGlmIChUb2tlblNlcnZpY2UuZ2V0VG9rZW4oKSkgewogICAgbmV4dCgiLyIpOwogICAgcmV0dXJuOwogIH0KCiAgbmV4dCgiL2xvZ2luIik7Cn07Cgp2YXIgcm91dGVzID0gW3sKICBwYXRoOiAiLyIsCiAgbmFtZTogIkhvbWUiLAogIG1ldGE6IHsKICAgIHNob3dVSTogdHJ1ZSwKICAgICJwdWJsaWMiOiBmYWxzZSwKICAgIG9ubHlXaGVuTG9nZ2VkT3V0OiBmYWxzZQogIH0sCiAgY29tcG9uZW50OiBIb21lCn0sIHsKICBwYXRoOiAiL2Fib3V0IiwKICBuYW1lOiAiQWJvdXQiLAogIGNvbXBvbmVudDogQWJvdXQKfSwgewogIHBhdGg6ICIvbG9naW4iLAogIG5hbWU6ICJMb2dpbiIsCiAgbWV0YTogewogICAgZGFya01vZGU6IHRydWUsCiAgICAicHVibGljIjogdHJ1ZSwKICAgIG9ubHlXaGVuTG9nZ2VkT3V0OiB0cnVlCiAgfSwKICBjb21wb25lbnQ6IExvZ2luLAogIHByb3BzOiB7CiAgICAnaGlkZUhlYWRlcic6IHRydWUKICB9Cn1dOwp2YXIgcm91dGVyID0gbmV3IFJvdXRlcih7CiAgbW9kZTogJ2hpc3RvcnknLAogIGJhc2U6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAiLyIsCiAgcm91dGVzOiByb3V0ZXMKfSk7CnJvdXRlci5iZWZvcmVFYWNoKGZ1bmN0aW9uICh0bywgZnJvbSwgbmV4dCkgewogIHZhciBpc1B1YmxpYyA9IHRvLm1hdGNoZWQuc29tZShmdW5jdGlvbiAocmVjb3JkKSB7CiAgICByZXR1cm4gcmVjb3JkLm1ldGFbInB1YmxpYyJdOwogIH0pOwogIHZhciBvbmx5V2hlbkxvZ2dlZE91dCA9IHRvLm1hdGNoZWQuc29tZShmdW5jdGlvbiAocmVjb3JkKSB7CiAgICByZXR1cm4gcmVjb3JkLm1ldGEub25seVdoZW5Mb2dnZWRPdXQ7CiAgfSk7CiAgdmFyIGxvZ2dlZEluID0gISFUb2tlblNlcnZpY2UuZ2V0KCk7CgogIGlmICghaXNQdWJsaWMgJiYgIWxvZ2dlZEluKSB7CiAgICByZXR1cm4gbmV4dCgiL2xvZ2luIik7CiAgfSAvLyBEbyBub3QgYWxsb3cgdXNlciB0byB2aXNpdCBsb2dpbiBwYWdlIG9yIHJlZ2lzdGVyIHBhZ2UgaWYgdGhleSBhcmUgbG9nZ2VkIGluCgoKICBpZiAobG9nZ2VkSW4gJiYgb25seVdoZW5Mb2dnZWRPdXQpIHsKICAgIHJldHVybiBuZXh0KCIvIik7CiAgfQoKICBuZXh0KCk7Cn0pOwpleHBvcnQgZGVmYXVsdCByb3V0ZXI7"},{"version":3,"sources":["/Users/Front-End/Desktop/cp-v1.2/src/router/index.js"],"names":["Vue","Router","TokenService","use","Home","About","Login","ifError","to","from","next","getToken","routes","path","name","meta","showUI","onlyWhenLoggedOut","component","darkMode","props","router","mode","base","process","env","NODE_ENV","beforeEach","isPublic","matched","some","record","loggedIn","get"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AAEAF,GAAG,CAACG,GAAJ,CAAQF,MAAR;;AACA,IAAMG,IAAI,GAAG,SAAPA,IAAO;AAAA,SAAM,OAAO,eAAP,CAAN;AAAA,CAAb;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,OAAO,gBAAP,CAAN;AAAA,CAAd;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,OAAO,gBAAP,CAAN;AAAA,CAAd;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAClC,MAAIR,YAAY,CAACS,QAAb,EAAJ,EAA6B;AAC3BD,IAAAA,IAAI,CAAC,GAAD,CAAJ;AACA;AACD;;AACDA,EAAAA,IAAI,CAAC,QAAD,CAAJ;AACD,CAND;;AASA,IAAME,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,IADJ;AAEJ,cAAQ,KAFJ;AAGJC,IAAAA,iBAAiB,EAAE;AAHf,GAHR;AAQEC,EAAAA,SAAS,EAAEd;AARb,CADa,EAWb;AACES,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEI,EAAAA,SAAS,EAAEb;AAHb,CAXa,EAgBb;AACEQ,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,IAAI,EAAE;AACJI,IAAAA,QAAQ,EAAE,IADN;AAEJ,cAAQ,IAFJ;AAGJF,IAAAA,iBAAiB,EAAE;AAHf,GAHR;AAQEC,EAAAA,SAAS,EAAEZ,KARb;AASEc,EAAAA,KAAK,EAAE;AAAE,kBAAc;AAAhB;AATT,CAhBa,CAAf;AA6BA,IAAMC,MAAM,GAAG,IAAIpB,MAAJ,CAAW;AACxBqB,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB,GAFN;AAGxBd,EAAAA,MAAM,EAANA;AAHwB,CAAX,CAAf;AAMAS,MAAM,CAACM,UAAP,CAAkB,UAACnB,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC,MAAMkB,QAAQ,GAAGpB,EAAE,CAACqB,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAAChB,IAAP,UAAJ;AAAA,GAAtB,CAAjB;AACA,MAAME,iBAAiB,GAAGT,EAAE,CAACqB,OAAH,CAAWC,IAAX,CACxB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAAChB,IAAP,CAAYE,iBAAhB;AAAA,GADkB,CAA1B;AAEA,MAAMe,QAAQ,GAAG,CAAC,CAAC9B,YAAY,CAAC+B,GAAb,EAAnB;;AAEA,MAAI,CAACL,QAAD,IAAa,CAACI,QAAlB,EAA4B;AAC1B,WAAOtB,IAAI,CAAC,QAAD,CAAX;AACD,GARmC,CAUpC;;;AACA,MAAIsB,QAAQ,IAAIf,iBAAhB,EAAmC;AACjC,WAAOP,IAAI,CAAC,GAAD,CAAX;AACD;;AAEDA,EAAAA,IAAI;AACL,CAhBD;AAkBA,eAAeW,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport { TokenService } from \"../services/storage.service\";\n\nVue.use(Router);\nconst Home = () => import(\"../views/Home\");\nconst About = () => import(\"../views/About\");\nconst Login = () => import(\"../views/Login\");\n\nconst ifError = (to, from, next) => {\n  if (TokenService.getToken()) {\n    next(\"/\");\n    return;\n  }\n  next(\"/login\");\n};\n\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    meta: {\n      showUI: true,\n      public: false,\n      onlyWhenLoggedOut: false\n    },\n    component: Home\n  },\n  {\n    path: \"/about\",\n    name: \"About\",\n    component: About\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    meta: {\n      darkMode: true,\n      public: true,\n      onlyWhenLoggedOut: true\n    },\n    component: Login,\n    props: { 'hideHeader': true }\n  },\n];\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.NODE_ENV ===\"/\",\n  routes\n});\n\nrouter.beforeEach((to, from, next) => {\n  const isPublic = to.matched.some(record => record.meta.public);\n  const onlyWhenLoggedOut = to.matched.some(\n    record => record.meta.onlyWhenLoggedOut);\n  const loggedIn = !!TokenService.get();\n\n  if (!isPublic && !loggedIn) {\n    return next(\"/login\");\n  }\n\n  // Do not allow user to visit login page or register page if they are logged in\n  if (loggedIn && onlyWhenLoggedOut) {\n    return next(\"/\");\n  }\n\n  next();\n});\n\nexport default router\n"]}]}