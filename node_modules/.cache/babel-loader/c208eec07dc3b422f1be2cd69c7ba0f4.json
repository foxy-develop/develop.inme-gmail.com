{"remainingRequest":"/Users/Front-End/Desktop/cp-v1.2/node_modules/babel-loader/lib/index.js!/Users/Front-End/Desktop/cp-v1.2/src/api/auth.service.js","dependencies":[{"path":"/Users/Front-End/Desktop/cp-v1.2/src/api/auth.service.js","mtime":1585514766000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9Gcm9udC1FbmQvRGVza3RvcC9jcC12MS4yL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvRnJvbnQtRW5kL0Rlc2t0b3AvY3AtdjEuMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9Vc2Vycy9Gcm9udC1FbmQvRGVza3RvcC9jcC12MS4yL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL0Zyb250LUVuZC9EZXNrdG9wL2NwLXYxLjIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF93cmFwTmF0aXZlU3VwZXIgZnJvbSAiL1VzZXJzL0Zyb250LUVuZC9EZXNrdG9wL2NwLXYxLjIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3dyYXBOYXRpdmVTdXBlciI7CmltcG9ydCBBcGlTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL2FwaS5zZXJ2aWNlIjsKaW1wb3J0IHsgVG9rZW5TZXJ2aWNlLCBTdG9yYWdlU2VydmljZSB9IGZyb20gIi4uL3NlcnZpY2VzL3N0b3JhZ2Uuc2VydmljZSI7CmltcG9ydCB7IEFQSV9BVVRIIH0gZnJvbSAiLi9hcGkuZW5kcG9pbnRzIjsKCnZhciBBdXRoZW50aWNhdGlvbkVycm9yID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfRXJyb3IpIHsKICBfaW5oZXJpdHMoQXV0aGVudGljYXRpb25FcnJvciwgX0Vycm9yKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihBdXRoZW50aWNhdGlvbkVycm9yKTsKCiAgZnVuY3Rpb24gQXV0aGVudGljYXRpb25FcnJvcihlcnJvckNvZGUsIG1lc3NhZ2UpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXV0aGVudGljYXRpb25FcnJvcik7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBtZXNzYWdlKTsKICAgIF90aGlzLm5hbWUgPSBfdGhpcy5jb25zdHJ1Y3Rvci5uYW1lOwogICAgX3RoaXMubWVzc2FnZSA9IG1lc3NhZ2U7CiAgICBfdGhpcy5lcnJvckNvZGUgPSBlcnJvckNvZGU7CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICByZXR1cm4gQXV0aGVudGljYXRpb25FcnJvcjsKfSggLyojX19QVVJFX18qL193cmFwTmF0aXZlU3VwZXIoRXJyb3IpKTsKCnZhciBBdXRoU2VydmljZSA9IHsKICBhdXRoOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2F1dGggPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocGhvbmUpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFwaVNlcnZpY2UucG9zdChBUElfQVVUSC5HRVRfUEFTUywgewogICAgICAgICAgICAgICAgcGhvbmU6IHBob25lCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBpZiAoIShyZXNwb25zZSAmJiByZXNwb25zZS5zdGF0dXMgPT0gMjAwKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIHRocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKF9jb250ZXh0LnQwLnJlc3BvbnNlLnN0YXR1cywgX2NvbnRleHQudDAucmVzcG9uc2UuZGF0YS5kZXRhaWwpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA4XV0pOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGF1dGgoX3gpIHsKICAgICAgcmV0dXJuIF9hdXRoLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGF1dGg7CiAgfSgpLAogIGxvZ2luOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2xvZ2luID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihwYXNzd29yZCwgcGhvbmUpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFwaVNlcnZpY2UucG9zdChBUElfQVVUSC5MT0dJTiwgewogICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogICAgICAgICAgICAgICAgcGhvbmU6IHBob25lCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5kYXRhKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN0YXR1cykgewogICAgICAgICAgICAgICAgVG9rZW5TZXJ2aWNlLnNhdmUocmVzcG9uc2UuZGF0YS50b2tlbik7CiAgICAgICAgICAgICAgICBBcGlTZXJ2aWNlLnNldEhlYWRlcigpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHRocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKHJlc3BvbnNlLmRhdGEuc3RhdHVzLCByZXNwb25zZS5kYXRhLm1lc3NhZ2UpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE1OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEyOwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgQXV0aGVudGljYXRpb25FcnJvcihfY29udGV4dDIudDAucmVzcG9uc2Uuc3RhdHVzLCBfY29udGV4dDIudDAucmVzcG9uc2UuZGF0YS5kZXRhaWwpOwoKICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDEyXV0pOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGxvZ2luKF94MiwgX3gzKSB7CiAgICAgIHJldHVybiBfbG9naW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gbG9naW47CiAgfSgpLAogIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgdmFyIHJlc3BvbnNlID0gQXBpU2VydmljZS5nZXQoQVBJX0FVVEguTE9HT1VUKTsKICAgIFN0b3JhZ2VTZXJ2aWNlLmNsZWFyKCk7CiAgICBBcGlTZXJ2aWNlLnJlbW92ZUhlYWRlcigpOwogICAgcmV0dXJuIHJlc3BvbnNlOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgQXV0aFNlcnZpY2U7CmV4cG9ydCB7IEF1dGhTZXJ2aWNlLCBBdXRoZW50aWNhdGlvbkVycm9yIH07"},{"version":3,"sources":["/Users/Front-End/Desktop/cp-v1.2/src/api/auth.service.js"],"names":["ApiService","TokenService","StorageService","API_AUTH","AuthenticationError","errorCode","message","name","constructor","Error","AuthService","auth","phone","post","GET_PASS","response","status","data","detail","login","password","LOGIN","save","token","setHeader","logout","get","LOGOUT","clear","removeHeader"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,6BAA7C;AACA,SAASC,QAAT,QAAyB,iBAAzB;;IAEMC,mB;;;;;AACJ,+BAAYC,SAAZ,EAAuBC,OAAvB,EAAgC;AAAA;;AAAA;;AAC9B,8BAAMA,OAAN;AACA,UAAKC,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AACA,UAAKD,OAAL,GAAeA,OAAf;AACA,UAAKD,SAAL,GAAiBA,SAAjB;AAJ8B;AAK/B;;;iCAN+BI,K;;AASlC,IAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI;AAAA,wEAAE,iBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEqBZ,UAAU,CAACa,IAAX,CAAgBV,QAAQ,CAACW,QAAzB,EAAmC;AAAEF,gBAAAA,KAAK,EAALA;AAAF,eAAnC,CAFrB;;AAAA;AAEIG,cAAAA,QAFJ;;AAAA,oBAGEA,QAAQ,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAHjC;AAAA;AAAA;AAAA;;AAAA,+CAIOD,QAAQ,CAACE,IAJhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAOI,IAAIb,mBAAJ,CACJ,YAAMW,QAAN,CAAeC,MADX,EAEJ,YAAMD,QAAN,CAAeE,IAAf,CAAoBC,MAFhB,CAPJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADc;AAelBC,EAAAA,KAAK;AAAA,yEAAE,kBAAeC,QAAf,EAAyBR,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEoBZ,UAAU,CAACa,IAAX,CAAgBV,QAAQ,CAACkB,KAAzB,EAAgC;AACrDD,gBAAAA,QAAQ,EAARA,QADqD;AAErDR,gBAAAA,KAAK,EAALA;AAFqD,eAAhC,CAFpB;;AAAA;AAEGG,cAAAA,QAFH;;AAAA,mBAMCA,QAAQ,CAACE,IANV;AAAA;AAAA;AAAA;;AAOD,kBAAIF,QAAQ,CAACE,IAAT,CAAcD,MAAlB,EAA0B;AACxBf,gBAAAA,YAAY,CAACqB,IAAb,CAAkBP,QAAQ,CAACE,IAAT,CAAcM,KAAhC;AACAvB,gBAAAA,UAAU,CAACwB,SAAX;AACD;;AAVA,gDAWMT,QAAQ,CAACE,IAXf;;AAAA;AAAA,oBAaK,IAAIb,mBAAJ,CACJW,QAAQ,CAACE,IAAT,CAAcD,MADV,EAEJD,QAAQ,CAACE,IAAT,CAAcX,OAFV,CAbL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAmBG,IAAIF,mBAAJ,CACJ,aAAMW,QAAN,CAAeC,MADX,EAEJ,aAAMD,QAAN,CAAeE,IAAf,CAAoBC,MAFhB,CAnBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAfa;AAyClBO,EAAAA,MAAM,EAAE,kBAAW;AACjB,QAAMV,QAAQ,GAAGf,UAAU,CAAC0B,GAAX,CAAevB,QAAQ,CAACwB,MAAxB,CAAjB;AACAzB,IAAAA,cAAc,CAAC0B,KAAf;AACA5B,IAAAA,UAAU,CAAC6B,YAAX;AACA,WAAOd,QAAP;AACD;AA9CiB,CAApB;AAiDA,eAAeL,WAAf;AACA,SAASA,WAAT,EAAsBN,mBAAtB","sourcesContent":["import ApiService from \"../services/api.service\";\nimport { TokenService, StorageService } from \"../services/storage.service\";\nimport { API_AUTH } from \"./api.endpoints\";\n\nclass AuthenticationError extends Error {\n  constructor(errorCode, message) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errorCode = errorCode;\n  }\n}\n\nconst AuthService = {\n  auth: async function(phone) {\n    try {\n      const response = await ApiService.post(API_AUTH.GET_PASS, { phone });\n      if (response && response.status == 200) {\n        return response.data;\n      }\n    } catch (error) {\n      throw new AuthenticationError(\n        error.response.status,\n        error.response.data.detail\n      );\n    }\n  },\n\n  login: async function(password, phone) {\n    try {\n      const response = await ApiService.post(API_AUTH.LOGIN, {\n        password,\n        phone\n      });\n      if (response.data) {\n        if (response.data.status) {\n          TokenService.save(response.data.token);\n          ApiService.setHeader();\n        }\n        return response.data;\n      } else {\n        throw new AuthenticationError(\n          response.data.status,\n          response.data.message\n        );\n      }\n    } catch (error) {\n      throw new AuthenticationError(\n        error.response.status,\n        error.response.data.detail\n      );\n    }\n  },\n\n  logout: function() {\n    const response = ApiService.get(API_AUTH.LOGOUT);\n    StorageService.clear();\n    ApiService.removeHeader();\n    return response;\n  }\n};\n\nexport default AuthService;\nexport { AuthService, AuthenticationError };\n"]}]}