{"remainingRequest":"/Users/inme/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme/new-cp/develop.inme-gmail.com/src/api/user.service.js","dependencies":[{"path":"/Users/inme/new-cp/develop.inme-gmail.com/src/api/user.service.js","mtime":1585561783443},{"path":"/Users/inme/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":1585560594906},{"path":"/Users/inme/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":1585560594458}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9pbm1lL25ldy1jcC9kZXZlbG9wLmlubWUtZ21haWwuY29tL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvaW5tZS9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIi9Vc2Vycy9pbm1lL25ldy1jcC9kZXZlbG9wLmlubWUtZ21haWwuY29tL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2lubWUvbmV3LWNwL2RldmVsb3AuaW5tZS1nbWFpbC5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF93cmFwTmF0aXZlU3VwZXIgZnJvbSAiL1VzZXJzL2lubWUvbmV3LWNwL2RldmVsb3AuaW5tZS1nbWFpbC5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3dyYXBOYXRpdmVTdXBlciI7CmltcG9ydCBBcGlTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL2FwaS5zZXJ2aWNlIjsKaW1wb3J0IHsgVGhlbWVTZXJ2aWNlIH0gZnJvbSAiLi4vc2VydmljZXMvc3RvcmFnZS5zZXJ2aWNlIjsKaW1wb3J0IHsgQVBJX1VTRVIgfSBmcm9tICIuL2FwaS5lbmRwb2ludHMiOwoKdmFyIFVzZXJFcnJvciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0Vycm9yKSB7CiAgX2luaGVyaXRzKFVzZXJFcnJvciwgX0Vycm9yKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihVc2VyRXJyb3IpOwoKICBmdW5jdGlvbiBVc2VyRXJyb3IoZXJyb3JDb2RlLCBtZXNzYWdlKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVzZXJFcnJvcik7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBtZXNzYWdlKTsKICAgIF90aGlzLm5hbWUgPSBfdGhpcy5jb25zdHJ1Y3Rvci5uYW1lOwogICAgX3RoaXMubWVzc2FnZSA9IG1lc3NhZ2U7CiAgICBfdGhpcy5lcnJvckNvZGUgPSBlcnJvckNvZGU7CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICByZXR1cm4gVXNlckVycm9yOwp9KCAvKiNfX1BVUkVfXyovX3dyYXBOYXRpdmVTdXBlcihFcnJvcikpOwoKdmFyIFVzZXJTZXJ2aXZlID0gewogIHByb2ZpbGU6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfcHJvZmlsZSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEFwaVNlcnZpY2UuZ2V0KEFQSV9VU0VSLlBST0ZJTEUpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCEocmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3RhdHVzID09IDIwMCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXNwb25zZS5kYXRhLnN0YXR1cyAmJiBUaGVtZVNlcnZpY2Uuc2F2ZShyZXNwb25zZS5kYXRhLnByb2ZpbGUudGhlbWUpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIHRocm93IG5ldyBVc2VyRXJyb3IoX2NvbnRleHQudDAucmVzcG9uc2Uuc3RhdHVzLCBfY29udGV4dC50MC5yZXNwb25zZS5kYXRhLmRldGFpbCk7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDldXSk7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gcHJvZmlsZSgpIHsKICAgICAgcmV0dXJuIF9wcm9maWxlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIHByb2ZpbGU7CiAgfSgpLAogIHRoZW1lOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3RoZW1lID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHRoZW1lLCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICB0aGVtZSA9IFRoZW1lU2VydmljZS5nZXQoKSA9PT0gImRhcmsiID8gImxpZ2h0IiA6ICJkYXJrIjsKICAgICAgICAgICAgICBUaGVtZVNlcnZpY2Uuc2F2ZSh0aGVtZSk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAyOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gQXBpU2VydmljZS5wb3N0KEFQSV9VU0VSLlNXSVRDSF9USEVNRSwgewogICAgICAgICAgICAgICAgdGhlbWU6IHRoZW1lCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCEocmVzcG9uc2UgJiYgcmVzcG9uc2UuZGF0YS5zdGF0dXMpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDg7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB7CiAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLmRhdGEuc3RhdHVzLAogICAgICAgICAgICAgICAgdGhlbWU6IHRoZW1lCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMzsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMDsKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IFVzZXJFcnJvcihfY29udGV4dDIudDAucmVzcG9uc2Uuc3RhdHVzLCBfY29udGV4dDIudDAucmVzcG9uc2UuZGF0YS5kZXRhaWwpOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzIsIDEwXV0pOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIHRoZW1lKCkgewogICAgICByZXR1cm4gX3RoZW1lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIHRoZW1lOwogIH0oKQp9OwpleHBvcnQgZGVmYXVsdCBVc2VyU2Vydml2ZTsKZXhwb3J0IHsgVXNlclNlcnZpdmUsIFVzZXJFcnJvciB9Ow=="},{"version":3,"sources":["/Users/inme/new-cp/develop.inme-gmail.com/src/api/user.service.js"],"names":["ApiService","ThemeService","API_USER","UserError","errorCode","message","name","constructor","Error","UserServive","profile","get","PROFILE","response","status","data","save","theme","detail","post","SWITCH_THEME"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;;IAEMC,S;;;;;AACJ,qBAAYC,SAAZ,EAAuBC,OAAvB,EAAgC;AAAA;;AAAA;;AAC9B,8BAAOA,OAAP;AACA,UAAKC,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AACA,UAAKD,OAAL,GAAeA,OAAf;AACA,UAAKD,SAAL,GAAiBA,SAAjB;AAJ8B;AAK/B;;;iCANqBI,K;;AASxB,IAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO;AAAA,2EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEkBV,UAAU,CAACW,GAAX,CAAgBT,QAAQ,CAACU,OAAzB,CAFlB;;AAAA;AAECC,cAAAA,QAFD;;AAAA,oBAGDA,QAAQ,IAAIA,QAAQ,CAACC,MAAT,IAAmB,GAH9B;AAAA;AAAA;AAAA;;AAIHD,cAAAA,QAAQ,CAACE,IAAT,CAAcD,MAAd,IAAwBb,YAAY,CAACe,IAAb,CAAkBH,QAAQ,CAACE,IAAT,CAAcL,OAAd,CAAsBO,KAAxC,CAAxB;AAJG,+CAKIJ,QAAQ,CAACE,IALb;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAQC,IAAIZ,SAAJ,CAAc,YAAMU,QAAN,CAAeC,MAA7B,EAAqC,YAAMD,QAAN,CAAeE,IAAf,CAAoBG,MAAzD,CARD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADW;AAYlBD,EAAAA,KAAK;AAAA,yEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACCA,cAAAA,KADD,GACShB,YAAY,CAACU,GAAb,OAAuB,MAAvB,GAAgC,OAAhC,GAA0C,MADnD;AAELV,cAAAA,YAAY,CAACe,IAAb,CAAkBC,KAAlB;AAFK;AAAA;AAAA,qBAIoBjB,UAAU,CAACmB,IAAX,CAAgBjB,QAAQ,CAACkB,YAAzB,EAAuC;AAACH,gBAAAA,KAAK,EAALA;AAAD,eAAvC,CAJpB;;AAAA;AAIGJ,cAAAA,QAJH;;AAAA,oBAKCA,QAAQ,IAAIA,QAAQ,CAACE,IAAT,CAAcD,MAL3B;AAAA;AAAA;AAAA;;AAAA,gDAMM;AAACA,gBAAAA,MAAM,EAAED,QAAQ,CAACE,IAAT,CAAcD,MAAvB;AAA+BG,gBAAAA,KAAK,EAAEA;AAAtC,eANN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oBASG,IAAId,SAAJ,CAAc,aAAMU,QAAN,CAAeC,MAA7B,EAAqC,aAAMD,QAAN,CAAeE,IAAf,CAAoBG,MAAzD,CATH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAZa,CAApB;AA0BA,eAAeT,WAAf;AACA,SAASA,WAAT,EAAsBN,SAAtB","sourcesContent":["import ApiService from \"../services/api.service\";\nimport { ThemeService } from \"../services/storage.service\";\nimport { API_USER } from \"./api.endpoints\";\n\nclass UserError extends Error {\n  constructor(errorCode, message) {\n    super( message );\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errorCode = errorCode;\n  }\n}\n\nconst UserServive = {\n  profile: async function() {\n    try {\n      const response = await ApiService.get( API_USER.PROFILE );\n      if (response && response.status == 200) {\n        response.data.status && ThemeService.save(response.data.profile.theme);\n        return response.data;\n      }\n    } catch ( error ) {\n      throw new UserError(error.response.status, error.response.data.detail)\n    }\n  },\n  theme: async function() {\n    const theme = ThemeService.get() === \"dark\" ? \"light\" : \"dark\";\n    ThemeService.save(theme);\n    try {\n      const response = await ApiService.post(API_USER.SWITCH_THEME, {theme});\n      if (response && response.data.status) {\n        return {status: response.data.status, theme: theme};\n      }\n    } catch ( error ) {\n      throw new UserError(error.response.status, error.response.data.detail)\n    }\n  }\n}\n\nexport default UserServive;\nexport { UserServive, UserError };\n"]}]}