{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/charts.js","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/charts.js","mtime":1586389334524},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgppbXBvcnQgeyBEQVRBX1JFUVVFU1QsIERBVEFfU1VDQ0VTUywgREFUQV9QUkVMT0FELCBEQVRBX1NXSVRDSCwgREFUQV9GSUxURVIsIERBVEFfRVJST1IgfSBmcm9tICIuLi9hY3Rpb25zL2NoYXJ0cyI7CmltcG9ydCBEYXRhU2VydmljZSBmcm9tICIuLi8uLi9hcGkvZGF0YS5zZXJ2aWNlIjsKaW1wb3J0IHsgQVVUSF9MT0dPVVQgfSBmcm9tICIuLi9hY3Rpb25zL2F1dGgiOwppbXBvcnQgY2hhcnRzRGF0YU1vZGVsIGZyb20gIi4uL21vZGVscy9jaGFydHMiOwp2YXIgc3RhdGUgPSBjaGFydHNEYXRhTW9kZWwoKTsKdmFyIGdldHRlcnMgPSB7CiAgZ2V0UGVyaW9kOiBmdW5jdGlvbiBnZXRQZXJpb2Qoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5wZXJpb2Q7CiAgfSwKICBnZXRDaGFydEZpbHRlcnM6IGZ1bmN0aW9uIGdldENoYXJ0RmlsdGVycyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmZpbHRlcjsKICB9LAogIGdldENoYXJ0RGF0YTogZnVuY3Rpb24gZ2V0Q2hhcnREYXRhKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuZGF0YVtzdGF0ZS5wZXJpb2RdOwogIH0sCiAgaXNDaGFydERhdGFMb2FkZWQ6IGZ1bmN0aW9uIGlzQ2hhcnREYXRhTG9hZGVkKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUubG9hZGVkOwogIH0sCiAgZ2V0UGVyaW9kczogZnVuY3Rpb24gZ2V0UGVyaW9kcyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnBlcmlvZHM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIERBVEFfUkVRVUVTVCwgZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmKSB7CiAgICB2YXIgY29tbWl0LCBkaXNwYXRjaCwgcjsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQsIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgICAgICAgICAgY29tbWl0KERBVEFfUkVRVUVTVCk7CgogICAgICAgICAgICBpZiAoc3RhdGUuZGF0YVtzdGF0ZS5wZXJpb2RdLmxhYmVscy5sZW5ndGgpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBEYXRhU2VydmljZS5nZXRDaGFydHNEYXRhKHN0YXRlLnBlcmlvZCk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICByID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgci5zdGF0dXMuZGF0YS5zdGF0dXMgPyBjb21taXQoREFUQV9TVUNDRVNTLCB7CiAgICAgICAgICAgICAgZGF0YTogci5kYXRhLAogICAgICAgICAgICAgIHBlcmlvZDogc3RhdGUucGVyaW9kCiAgICAgICAgICAgIH0pIDogZGlzcGF0Y2goREFUQV9FUlJPUik7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBkaXNwYXRjaChEQVRBX1BSRUxPQUQpOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgREFUQV9QUkVMT0FELCBmdW5jdGlvbiAoX3JlZjMpIHsKICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogIHN0YXRlLnBlcmlvZHMuZm9yRWFjaCggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocCkgewogICAgICB2YXIgcjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBpZiAoc3RhdGUuZGF0YVtwLmlkXS5sYWJlbHMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gRGF0YVNlcnZpY2UuZ2V0Q2hhcnRzRGF0YShwLmlkKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KERBVEFfU1VDQ0VTUywgewogICAgICAgICAgICAgICAgZGF0YTogci5kYXRhLAogICAgICAgICAgICAgICAgcGVyaW9kOiBwLmlkCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeDIpIHsKICAgICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIERBVEFfU1dJVENILCBmdW5jdGlvbiAoX3JlZjUsIHBlcmlvZCkgewogIHZhciBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgY29tbWl0KERBVEFfU1dJVENILCBwZXJpb2QpOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBEQVRBX0ZJTFRFUiwgZnVuY3Rpb24gKF9yZWY2LCBfcmVmNykgewogIHZhciBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgdmFyIHR5cGUgPSBfcmVmNy50eXBlOwogIGNvbW1pdChEQVRBX0ZJTFRFUiwgdHlwZSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIERBVEFfRVJST1IsIGZ1bmN0aW9uIChfcmVmOCkgewogIHZhciBjb21taXQgPSBfcmVmOC5jb21taXQsCiAgICAgIGRpc3BhdGNoID0gX3JlZjguZGlzcGF0Y2g7CiAgY29tbWl0KERBVEFfRVJST1IpOwogIGRpc3BhdGNoKEFVVEhfTE9HT1VUKTsKfSksIF9hY3Rpb25zKTsKdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBEQVRBX1JFUVVFU1QsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLmxvYWRlZCA9IGZhbHNlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIERBVEFfU1VDQ0VTUywgZnVuY3Rpb24gKHN0YXRlLCByZXNwb25zZSkgewogIHN0YXRlLmRhdGFbcmVzcG9uc2UucGVyaW9kXSA9IHJlc3BvbnNlLmRhdGE7CiAgc3RhdGUubG9hZGVkID0gdHJ1ZTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBEQVRBX0ZJTFRFUiwgZnVuY3Rpb24gKHN0YXRlLCB0eXBlKSB7CiAgc3RhdGUuZmlsdGVyW3R5cGVdID0gIXN0YXRlLmZpbHRlclt0eXBlXTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBEQVRBX1NXSVRDSCwgZnVuY3Rpb24gKHN0YXRlLCBwZXJpb2QpIHsKICBzdGF0ZS5wZXJpb2QgPSBwZXJpb2Q7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgQVVUSF9MT0dPVVQsIGZ1bmN0aW9uIChzdGF0ZSkgewogIE9iamVjdC5hc3NpZ24oc3RhdGUsIGNoYXJ0c0RhdGFNb2RlbCgpKTsKfSksIF9tdXRhdGlvbnMpOwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/charts.js"],"names":["DATA_REQUEST","DATA_SUCCESS","DATA_PRELOAD","DATA_SWITCH","DATA_FILTER","DATA_ERROR","DataService","AUTH_LOGOUT","chartsDataModel","state","getters","getPeriod","period","getChartFilters","filter","getChartData","data","isChartDataLoaded","loaded","getPeriods","periods","actions","commit","dispatch","labels","length","getChartsData","r","status","forEach","p","id","type","mutations","response","Object","assign"],"mappings":"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","sourcesContent":["import {\n  DATA_REQUEST,\n  DATA_SUCCESS,\n  DATA_PRELOAD,\n  DATA_SWITCH,\n  DATA_FILTER,\n  DATA_ERROR\n} from \"../actions/charts\";\n\nimport DataService from \"../../api/data.service\";\nimport { AUTH_LOGOUT } from \"../actions/auth\";\nimport chartsDataModel from \"../models/charts\";\n\nconst state = chartsDataModel();\n\nconst getters = {\n  getPeriod: state => state.period,\n  getChartFilters: state => state.filter,\n  getChartData: state => state.data[state.period],\n  isChartDataLoaded: state => state.loaded,\n  getPeriods: state => state.periods,\n};\n\nconst actions = {\n  [DATA_REQUEST]: async ({ commit, dispatch }) => {\n    commit(DATA_REQUEST);\n    if (!state.data[state.period].labels.length) {\n      const r = await DataService.getChartsData(state.period);\n      r.status.data.status\n        ? commit(DATA_SUCCESS, { data: r.data, period: state.period })\n        : dispatch(DATA_ERROR);\n    }\n    dispatch(DATA_PRELOAD);\n  },\n  [DATA_PRELOAD]: ({ commit }) => {\n    state.periods.forEach(async p => {\n      if (!state.data[p.id].labels.length) {\n        const r = await DataService.getChartsData(p.id);\n        commit(DATA_SUCCESS, { data: r.data, period: p.id });\n      }\n    });\n  },\n  [DATA_SWITCH]: ({ commit }, period) => {\n    commit(DATA_SWITCH, period);\n  },\n  [DATA_FILTER]: ({ commit }, { type }) => {\n    commit(DATA_FILTER, type);\n  },\n  [DATA_ERROR]: ({commit, dispatch}) => {\n    commit(DATA_ERROR);\n    dispatch(AUTH_LOGOUT);\n  }\n};\n\nconst mutations = {\n  [DATA_REQUEST]: state => {\n    state.loaded = false;\n  },\n  [DATA_SUCCESS]: (state, response) => {\n    state.data[response.period] = response.data;\n    state.loaded = true;\n  },\n  [DATA_FILTER]: (state, type) => {\n    state.filter[type] = !state.filter[type];\n  },\n  [DATA_SWITCH]: (state, period) => {\n    state.period = period;\n  },\n  [AUTH_LOGOUT]: state => {\n    Object.assign(state, chartsDataModel());\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}