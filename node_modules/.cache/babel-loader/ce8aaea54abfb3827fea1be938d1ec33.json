{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/auth.js","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/auth.js","mtime":1586390309111},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgovKiBlc2xpbnQtZGlzYWJsZSBwcm9taXNlL3BhcmFtLW5hbWVzICovCmltcG9ydCB7IEFVVEhfUkVRVUVTVCwgQVVUSF9FUlJPUiwgQVVUSF9MT0dJTiwgQVVUSF9TVUNDRVNTLCBBVVRIX0xPR09VVCB9IGZyb20gIi4uL2FjdGlvbnMvYXV0aCI7CmltcG9ydCBBdXRoU2VydmljZSBmcm9tICIuLi8uLi9hcGkvYXV0aC5zZXJ2aWNlIjsKaW1wb3J0IHsgVG9rZW5TZXJ2aWNlIH0gZnJvbSAiLi4vLi4vc2VydmljZXMvc3RvcmFnZS5zZXJ2aWNlIjsKaW1wb3J0IHJvdXRlciBmcm9tICIuLi8uLi9yb3V0ZXIiOwppbXBvcnQgeyBVU0VSX1JFUVVFU1QgfSBmcm9tICIuLi9hY3Rpb25zL3VzZXIiOwoKdmFyIGRlZmF1bHRTdGF0ZSA9IGZ1bmN0aW9uIGRlZmF1bHRTdGF0ZSgpIHsKICByZXR1cm4gewogICAgc3RhdHVzOiBmYWxzZSwKICAgIGVycm9yTWVzc2FnZTogbnVsbCwKICAgIHBob25lOiBudWxsLAogICAgdG9rZW46IFRva2VuU2VydmljZS5nZXQoKSB8fCAnJwogIH07Cn07Cgp2YXIgc3RhdGUgPSBkZWZhdWx0U3RhdGUoKTsKdmFyIGdldHRlcnMgPSB7CiAgaXNQaG9uZUFwcHJvdmVkOiBmdW5jdGlvbiBpc1Bob25lQXBwcm92ZWQoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5waG9uZTsKICB9LAogIGdldEVycm9yTWVzc2FnZTogZnVuY3Rpb24gZ2V0RXJyb3JNZXNzYWdlKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuZXJyb3JNZXNzYWdlOwogIH0sCiAgaXNBdXRoZW50aWNhdGVkOiBmdW5jdGlvbiBpc0F1dGhlbnRpY2F0ZWQoc3RhdGUpIHsKICAgIHJldHVybiAhIXN0YXRlLnRva2VuOwogIH0KfTsKdmFyIGFjdGlvbnMgPSAoX2FjdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBBVVRIX1JFUVVFU1QsIGZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZiwgcGhvbmUpIHsKICAgIHZhciBjb21taXQsIHI7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICBjb21taXQoQVVUSF9SRVFVRVNUKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBBdXRoU2VydmljZS5hdXRoKHBob25lKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIHIgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByLnN0YXR1cyA/IGNvbW1pdChBVVRIX1NVQ0NFU1MsIHBob25lKSA6IGNvbW1pdChBVVRIX0VSUk9SLCByLm1lc3NhZ2UpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MikgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBBVVRIX0xPR0lOLCBmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY1ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihfcmVmMywgX3JlZjQpIHsKICAgIHZhciBjb21taXQsIGRpc3BhdGNoLCBwYXNzd29yZCwgcGhvbmUsIHI7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQsIGRpc3BhdGNoID0gX3JlZjMuZGlzcGF0Y2g7CiAgICAgICAgICAgIHBhc3N3b3JkID0gX3JlZjQucGFzc3dvcmQsIHBob25lID0gX3JlZjQucGhvbmU7CiAgICAgICAgICAgIGNvbW1pdChBVVRIX1JFUVVFU1QpOwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBBdXRoU2VydmljZS5sb2dpbihwYXNzd29yZCwgcGhvbmUpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgciA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgaWYgKHIuc3RhdHVzKSB7CiAgICAgICAgICAgICAgY29tbWl0KEFVVEhfU1VDQ0VTUywgci50b2tlbik7CiAgICAgICAgICAgICAgcm91dGVyLnB1c2goIi8iKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaChVU0VSX1JFUVVFU1QpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGNvbW1pdChBVVRIX0VSUk9SLCByLm1lc3NhZ2UpOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgci5zdGF0dXMpOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeDMsIF94NCkgewogICAgcmV0dXJuIF9yZWY1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBBVVRIX0xPR09VVCwgZnVuY3Rpb24gKF9yZWY2KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY2LmNvbW1pdDsKICBBdXRoU2VydmljZS5sb2dvdXQoKTsKICBjb21taXQoQVVUSF9MT0dPVVQpOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBBVVRIX0VSUk9SLCBmdW5jdGlvbiAoX3JlZjcsIG1zZykgewogIHZhciBjb21taXQgPSBfcmVmNy5jb21taXQsCiAgICAgIGRpc3BhdGNoID0gX3JlZjcuZGlzcGF0Y2g7CiAgY29tbWl0KEFVVEhfRVJST1IsIG1zZyk7CiAgZGlzcGF0Y2goQVVUSF9MT0dPVVQpOwp9KSwgX2FjdGlvbnMpOwp2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFVVEhfUkVRVUVTVCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuc3RhdHVzID0gImxvYWRpbmciOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFVVEhfU1VDQ0VTUywgZnVuY3Rpb24gKHN0YXRlLCB0b2tlbikgewogIHN0YXRlLnRva2VuID0gdG9rZW47CiAgc3RhdGUuc3RhdHVzID0gdHJ1ZTsKICBzdGF0ZS5waG9uZSA9IHRydWU7CiAgc3RhdGUuZXJyb3JNZXNzYWdlID0gIiI7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgQVVUSF9FUlJPUiwgZnVuY3Rpb24gKHN0YXRlLCBtc2cpIHsKICBzdGF0ZS50b2tlbiA9IFRva2VuU2VydmljZS5nZXQoKSB8fCAnJzsKICBzdGF0ZS5lcnJvck1lc3NhZ2UgPSBtc2c7CiAgc3RhdGUuc3RhdHVzID0gImZhbHNlIjsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBBVVRIX0xPR09VVCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgT2JqZWN0LmFzc2lnbihzdGF0ZSwgZGVmYXVsdFN0YXRlKCkpOwp9KSwgX211dGF0aW9ucyk7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/auth.js"],"names":["AUTH_REQUEST","AUTH_ERROR","AUTH_LOGIN","AUTH_SUCCESS","AUTH_LOGOUT","AuthService","TokenService","router","USER_REQUEST","defaultState","status","errorMessage","phone","token","get","state","getters","isPhoneApproved","getErrorMessage","isAuthenticated","actions","commit","auth","r","message","dispatch","password","login","push","then","logout","msg","mutations","Object","assign"],"mappings":"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","sourcesContent":["\n/* eslint-disable promise/param-names */\nimport {\n  AUTH_REQUEST,\n  AUTH_ERROR,\n  AUTH_LOGIN,\n  AUTH_SUCCESS,\n  AUTH_LOGOUT\n} from \"../actions/auth\";\n\nimport AuthService from \"../../api/auth.service\";\nimport { TokenService } from \"../../services/storage.service\";\nimport router from \"../../router\";\nimport { USER_REQUEST } from \"../actions/user\";\nconst defaultState = () => {\n  return {\n      status: false,\n      errorMessage: null,\n      phone: null,\n      token: TokenService.get() || ''\n  }\n}\nconst state = defaultState();\n\nconst getters = {\n  isPhoneApproved: state => state.phone,\n  getErrorMessage: state => state.errorMessage,\n  isAuthenticated: state => !!state.token\n};\n\nconst actions = {\n  [AUTH_REQUEST]: async ({ commit }, phone) => {\n    commit(AUTH_REQUEST);\n    const r = await AuthService.auth(phone);\n    r.status ? commit(AUTH_SUCCESS, phone) : commit(AUTH_ERROR, r.message);\n  },\n  [AUTH_LOGIN]: async ({ commit, dispatch }, { password, phone }) => {\n    commit(AUTH_REQUEST);\n    const r = await AuthService.login(password, phone);\n    if (r.status) {\n      commit(AUTH_SUCCESS, r.token);\n      router.push(\"/\").then(() => dispatch(USER_REQUEST));\n    } else {\n      commit(AUTH_ERROR, r.message);\n    }\n    return r.status;\n  },\n  [AUTH_LOGOUT]: ({ commit }) => {\n    AuthService.logout();\n    commit(AUTH_LOGOUT);\n  },\n  [AUTH_ERROR]: ({ commit, dispatch }, msg) => {\n    commit(AUTH_ERROR, msg);\n    dispatch(AUTH_LOGOUT);\n  }\n};\n\nconst mutations = {\n  [AUTH_REQUEST]: state => {\n    state.status = \"loading\";\n  },\n  [AUTH_SUCCESS]: (state, token) => {\n    state.token = token;\n    state.status = true;\n    state.phone = true;\n    state.errorMessage = \"\";\n  },\n  [AUTH_ERROR]: (state, msg) => {\n    state.token = TokenService.get() || ''\n    state.errorMessage = msg;\n    state.status = \"false\";\n  },\n  [AUTH_LOGOUT]: state => {\n    Object.assign(state, defaultState());\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}