{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/components/dashboard-blocks/dashboard-map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/components/dashboard-blocks/dashboard-map.vue","mtime":1586246199766},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9pbm1lMS9QaHBzdG9ybVByb2plY3RzL25ldy1jcC9kZXZlbG9wLmlubWUtZ21haWwuY29tL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNlY3Rpb24gZnJvbSAiLi4vbGF5b3V0L1NlY3Rpb24iOwppbXBvcnQgQnV0dG9uIGZyb20gIi4uL2xheW91dC9CdXR0b24iOwppbXBvcnQgQmxvY2sgZnJvbSAiLi4vbGF5b3V0L0Jsb2NrIjsKaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwQWN0aW9ucyB9IGZyb20gInZ1ZXgiOwppbXBvcnQgUGVyaW9kU3dpdGNoZXIgZnJvbSAiLi4vcGVyaW9kLXN3aWN0aGVyIjsKaW1wb3J0IENoYXJ0TWFwIGZyb20gIi4uL21hcCI7CmltcG9ydCBNYXBDb3VudGVycyBmcm9tICIuLi9jb3VudGVycy9NYXBDb3VudGVycyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGFzaGJvYXJkTWFwIiwKICBjb21wb25lbnRzOiB7CiAgICBTZWN0aW9uOiBTZWN0aW9uLAogICAgQmxvY2s6IEJsb2NrLAogICAgQnV0dG9uOiBCdXR0b24sCiAgICBQZXJpb2RTd2l0Y2hlcjogUGVyaW9kU3dpdGNoZXIsCiAgICBDaGFydE1hcDogQ2hhcnRNYXAsCiAgICBNYXBDb3VudGVyczogTWFwQ291bnRlcnMKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiB0cnVlCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSB0cnVlOwoKICAgICAgICAgICAgICBpZiAoX3RoaXMuaXNNYXBMb2FkZWQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuTUFQX1JFUVVFU1QoKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBBY3Rpb25zKFsnTUFQX1JFUVVFU1QnLCAnTUFQX1NXSVRDSCddKSwgewogICAgbG9hZGVkOiBmdW5jdGlvbiBsb2FkZWQoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2xvYWRlZCcsIHRoaXMubG9hZGluZyk7CiAgICB9CiAgfSksCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWydnZXRNYXBQZXJpb2QnLCAnZ2V0TWFwRGF0YSddKSwgewogICAgc29ydEFycmF5OiBmdW5jdGlvbiBzb3J0QXJyYXkoKSB7CiAgICAgIHZhciBhcnIgPSB0aGlzLmdldE1hcERhdGE7CiAgICAgIHZhciBuZXdBcnIgPSBhcnIuc2xpY2UoKS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgcmV0dXJuIGEudmFsdWVfbmVnYXRpdmUgPT09IHBhcnNlRmxvYXQoYi52YWx1ZV9uZWdhdGl2ZSkgPyAwIDogcGFyc2VGbG9hdChhLnZhbHVlX25lZ2F0aXZlKSA8IHBhcnNlRmxvYXQoYi52YWx1ZV9uZWdhdGl2ZSkgPyAxIDogLTE7CiAgICAgIH0pOwogICAgICByZXR1cm4gbmV3QXJyLmZpbHRlcihmdW5jdGlvbiAoZWwpIHsKICAgICAgICByZXR1cm4gZWwudmFsdWVfbmVnYXRpdmUgIT0gMCB8fCBlbC52YWx1ZSAhPSAwOwogICAgICB9KS5zbGljZSgwLCAxMCk7CiAgICB9CiAgfSksCiAgd2F0Y2g6IHsKICAgIGxvYWRpbmc6IGZ1bmN0aW9uIGxvYWRpbmcoKSB7CiAgICAgIHRoaXMubG9hZGVkKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["dashboard-map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,OAAA,MAAA,mBAAA;AACA,OAAA,MAAA,MAAA,kBAAA;AACA,OAAA,KAAA,MAAA,iBAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,cAAA,MAAA,oBAAA;AACA,OAAA,QAAA,MAAA,QAAA;AACA,OAAA,WAAA,MAAA,yBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA,OADA;AACA,IAAA,KAAA,EAAA,KADA;AACA,IAAA,MAAA,EAAA,MADA;AACA,IAAA,cAAA,EAAA,cADA;AACA,IAAA,QAAA,EAAA,QADA;AACA,IAAA,WAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,KAAA,CAAA,OAAA,GAAA,IAAA;;AADA,kBAEA,KAAA,CAAA,WAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGA,KAAA,CAAA,WAAA,GAAA,IAAA,CAAA,YAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,eAFA,CAHA;;AAAA;AAAA;AAAA;;AAAA;AAOA,cAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,GAnBA;AAoBA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,aAAA,EAAA,YAAA,CAAA,CADA;AAEA,IAAA,MAFA,oBAEA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,OAAA;AACA;AAJA,IApBA;AA0BA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,cAAA,EAAA,YAAA,CAAA,CADA;AAEA,IAAA,SAFA,uBAEA;AACA,UAAA,GAAA,GAAA,KAAA,UAAA;AACA,UAAA,MAAA,GAAA,GAAA,CACA,KADA,GAEA,IAFA,CAEA,UAAA,CAAA,EAAA,CAAA;AAAA,eACA,CAAA,CAAA,cAAA,KAAA,UAAA,CAAA,CAAA,CAAA,cAAA,CAAA,GACA,CADA,GAEA,UAAA,CAAA,CAAA,CAAA,cAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,cAAA,CAAA,GACA,CADA,GAEA,CAAA,CALA;AAAA,OAFA,CAAA;AAUA,aAAA,MAAA,CACA,MADA,CACA,UAAA,EAAA;AAAA,eAAA,EAAA,CAAA,cAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,IAAA,CAAA;AAAA,OADA,EACA,KADA,CACA,CADA,EACA,EADA,CAAA;AAGA;AAjBA,IA1BA;AA6CA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,MAAA;AACA;AAHA;AA7CA,CAAA","sourcesContent":["<template>\n  <Section :title=\"'География выдачи'\" v-if=\"!loading\" reversed>\n    <template v-slot:side>\n      <MapCounters :data=\"sortArray\" />\n    </template>\n    <template v-slot:content>\n      <Block responsive>\n        <template v-slot:header>\n          <PeriodSwitcher\n            :current=\"getMapPeriod\"\n            :name=\"'map'\"\n            :callback=\"MAP_SWITCH\"\n          ></PeriodSwitcher>\n        </template>\n        <template v-slot:content>\n          <ChartMap :data=\"getMapData\"></ChartMap>\n        </template>\n        <template v-slot:button>\n          <Button :isRoute=\"true\" :route=\"'negative'\">Просмотреть негатив</Button>\n        </template>\n      </Block>\n    </template>\n  </Section>\n</template>\n\n<script>\nimport Section from \"../layout/Section\";\nimport Button from \"../layout/Button\";\nimport Block from \"../layout/Block\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport PeriodSwitcher from \"../period-swicther\";\nimport ChartMap from \"../map\"\nimport MapCounters from \"../counters/MapCounters\";\nexport default {\n  name: \"DashboardMap\",\n  components: {\n    Section, Block, Button, PeriodSwitcher, ChartMap, MapCounters\n  },\n  data() {\n    return {\n      loading: true\n    }\n  },\n  async mounted() {\n    this.loading = true;\n    if (!this.isMapLoaded) {\n      await this.MAP_REQUEST().then(() => {\n        this.loading = false;\n      });\n    } else {\n      this.loading = false;\n    }\n  },\n  methods: {\n    ...mapActions(['MAP_REQUEST', 'MAP_SWITCH']),\n    loaded() {\n      this.$emit('loaded', this.loading);\n    }\n  },\n  computed: {\n    ...mapGetters(['getMapPeriod', 'getMapData']),\n    sortArray() {\n      const arr = this.getMapData;\n      const newArr = arr\n        .slice()\n        .sort((a, b) =>\n          a.value_negative === parseFloat(b.value_negative)\n            ? 0\n            : parseFloat(a.value_negative) < parseFloat(b.value_negative)\n            ? 1\n            : -1\n        );\n\n      return newArr\n        .filter(el => el.value_negative != 0 || el.value != 0).slice(0, 10);\n\n    }\n  },\n  watch: {\n    loading() {\n      this.loaded();\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components/dashboard-blocks"}]}