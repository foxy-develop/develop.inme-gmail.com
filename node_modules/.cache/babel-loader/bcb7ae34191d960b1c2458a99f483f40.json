{"remainingRequest":"/Users/Front-End/Desktop/cp-v1.2/node_modules/babel-loader/lib/index.js!/Users/Front-End/Desktop/cp-v1.2/src/store/modules/auth.js","dependencies":[{"path":"/Users/Front-End/Desktop/cp-v1.2/src/store/modules/auth.js","mtime":1585514691000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvRnJvbnQtRW5kL0Rlc2t0b3AvY3AtdjEuMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9tdXRhdGlvbnM7CgovKiBlc2xpbnQtZGlzYWJsZSBwcm9taXNlL3BhcmFtLW5hbWVzICovCmltcG9ydCB7IEFVVEhfUkVRVUVTVCwgQVVUSF9FUlJPUiwgQVVUSF9TVUNDRVNTLCBBVVRIX0xPR09VVCB9IGZyb20gIi4uL2FjdGlvbnMvYXV0aCI7CmltcG9ydCBBdXRoU2VydmljZSBmcm9tICIuLi8uLi9hcGkvYXV0aC5zZXJ2aWNlIjsKaW1wb3J0IHJvdXRlciBmcm9tICIuLi8uLi9yb3V0ZXIiOwp2YXIgc3RhdGUgPSB7CiAgc3RhdHVzOiAiIiwKICBlcnJvck1lc3NhZ2U6ICIiLAogIHBob25lOiAiIgp9Owp2YXIgZ2V0dGVycyA9IHsKICBpc1Bob25lQXBwcm92ZWQ6IGZ1bmN0aW9uIGlzUGhvbmVBcHByb3ZlZChzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnBob25lOwogIH0sCiAgZ2V0RXJyb3JNZXNzYWdlOiBmdW5jdGlvbiBnZXRFcnJvck1lc3NhZ2Uoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5lcnJvck1lc3NhZ2U7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHt9Owp2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFVVEhfUkVRVUVTVCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuc3RhdHVzID0gImxvYWRpbmciOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFVVEhfU1VDQ0VTUywgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuc3RhdHVzID0gInRydWUiOwogIHN0YXRlLnBob25lID0gdHJ1ZTsKICBzdGF0ZS5lcnJvck1lc3NhZ2UgPSAiIjsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBBVVRIX0VSUk9SLCBmdW5jdGlvbiAoc3RhdGUsIG1zZykgewogIHN0YXRlLmVycm9yTWVzc2FnZSA9IG1zZzsKICBzdGF0ZS5zdGF0dXMgPSAiZmFsc2UiOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFVVEhfTE9HT1VULCBmdW5jdGlvbiAoKSB7CiAgc3RhdGUudG9rZW4gPSAiIjsKICBzdGF0ZS5waG9uZSA9IGZhbHNlOwp9KSwgX211dGF0aW9ucyk7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/Users/Front-End/Desktop/cp-v1.2/src/store/modules/auth.js"],"names":["AUTH_REQUEST","AUTH_ERROR","AUTH_SUCCESS","AUTH_LOGOUT","AuthService","router","state","status","errorMessage","phone","getters","isPhoneApproved","getErrorMessage","actions","mutations","msg","token"],"mappings":";;;;AAAA;AACA,SACEA,YADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,WAJF,QAKO,iBALP;AAOA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,EADI;AAEZC,EAAAA,YAAY,EAAE,EAFF;AAGZC,EAAAA,KAAK,EAAE;AAHK,CAAd;AAMA,IAAMC,OAAO,GAAG;AACdC,EAAAA,eAAe,EAAE,yBAAAL,KAAK;AAAA,WAAIA,KAAK,CAACG,KAAV;AAAA,GADR;AAEdG,EAAAA,eAAe,EAAE,yBAAAN,KAAK;AAAA,WAAIA,KAAK,CAACE,YAAV;AAAA;AAFR,CAAhB;AAKA,IAAMK,OAAO,GAAG,EAAhB;AAIA,IAAMC,SAAS,iDACZd,YADY,EACG,UAAAM,KAAK,EAAI;AACvBA,EAAAA,KAAK,CAACC,MAAN,GAAe,SAAf;AACD,CAHY,+BAIZL,YAJY,EAIG,UAAAI,KAAK,EAAI;AACvBA,EAAAA,KAAK,CAACC,MAAN,GAAe,MAAf;AACAD,EAAAA,KAAK,CAACG,KAAN,GAAc,IAAd;AACAH,EAAAA,KAAK,CAACE,YAAN,GAAqB,EAArB;AACD,CARY,+BASZP,UATY,EASC,UAACK,KAAD,EAAQS,GAAR,EAAgB;AAC5BT,EAAAA,KAAK,CAACE,YAAN,GAAqBO,GAArB;AACAT,EAAAA,KAAK,CAACC,MAAN,GAAe,OAAf;AACD,CAZY,+BAaZJ,WAbY,EAaE,YAAM;AACnBG,EAAAA,KAAK,CAACU,KAAN,GAAc,EAAd;AACAV,EAAAA,KAAK,CAACG,KAAN,GAAc,KAAd;AACD,CAhBY,cAAf;AAmBA,eAAe;AACbH,EAAAA,KAAK,EAALA,KADa;AAEbI,EAAAA,OAAO,EAAPA,OAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["/* eslint-disable promise/param-names */\nimport {\n  AUTH_REQUEST,\n  AUTH_ERROR,\n  AUTH_SUCCESS,\n  AUTH_LOGOUT\n} from \"../actions/auth\";\n\nimport AuthService from \"../../api/auth.service\";\nimport router from \"../../router\";\n\nconst state = {\n  status: \"\",\n  errorMessage: \"\",\n  phone: \"\"\n};\n\nconst getters = {\n  isPhoneApproved: state => state.phone,\n  getErrorMessage: state => state.errorMessage\n};\n\nconst actions = {\n\n};\n\nconst mutations = {\n  [AUTH_REQUEST]: state => {\n    state.status = \"loading\";\n  },\n  [AUTH_SUCCESS]: state => {\n    state.status = \"true\";\n    state.phone = true;\n    state.errorMessage = \"\";\n  },\n  [AUTH_ERROR]: (state, msg) => {\n    state.errorMessage = msg;\n    state.status = \"false\";\n  },\n  [AUTH_LOGOUT]: () => {\n    state.token = \"\";\n    state.phone = false;\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}