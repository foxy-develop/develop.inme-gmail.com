{"remainingRequest":"/Users/Front-End/Desktop/cp-v1.2/node_modules/babel-loader/lib/index.js!/Users/Front-End/Desktop/cp-v1.2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Front-End/Desktop/cp-v1.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Front-End/Desktop/cp-v1.2/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Front-End/Desktop/cp-v1.2/src/views/Login.vue","mtime":1585517342000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Front-End/Desktop/cp-v1.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wYXJzZS1mbG9hdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvRnJvbnQtRW5kL0Rlc2t0b3AvY3AtdjEuMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IHsgSU1hc2tDb21wb25lbnQgfSBmcm9tICJ2dWUtaW1hc2siOwppbXBvcnQgYWxsQ291bnRyaWVzIGZyb20gIi4uL2NvbnN0YW50cy9jb3VudHJ5LmNvZGVzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJMb2dpbiIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gInByb2R1Y3Rpb24iID8gIiIgOiAiMDAwMDAwIiwKICAgICAgcGhvbmU6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAicHJvZHVjdGlvbiIgPyAiIiA6ICIzODA2MzMwNzY3MTkiLAogICAgICBjb3VudHJ5OiAiIiwKICAgICAgbWFzazogIiswMDAwMDAwMDAwMDAwMDAiCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgImltYXNrLWlucHV0IjogSU1hc2tDb21wb25lbnQKICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWyJBVVRIX1JFUVVFU1QiLCAiQVVUSF9MT0dJTiJdKSwgewogICAgZ2V0Q291bnRyeTogZnVuY3Rpb24gZ2V0Q291bnRyeSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnBob25lLmxlbmd0aCA+IDEpIHsKICAgICAgICB2YXIgY291bnRyeSA9IGFsbENvdW50cmllcy5maWx0ZXIoZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgICByZXR1cm4gIXBhcnNlRmxvYXQoX3RoaXMucGhvbmUpLnRvU3RyaW5nKCkuaW5kZXhPZihlbC5kaWFsQ29kZSk7CiAgICAgICAgfSk7CgogICAgICAgIGlmIChjb3VudHJ5Lmxlbmd0aCA+IDEpIHsKICAgICAgICAgIHZhciBzb3J0ZWQgPSBjb3VudHJ5LnNsaWNlKCkuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChiLnByaW9yaXR5KSA/IDAgOiBwYXJzZUZsb2F0KGEucHJpb3JpdHkpID4gcGFyc2VGbG9hdChiLnByaW9yaXR5KSA/IDEgOiAtMTsKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy5jb3VudHJ5ID0gc29ydGVkW2NvdW50cnkubGVuZ3RoIC0gMV0uaXNvMjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKGNvdW50cnkubGVuZ3RoID4gMCkgdGhpcy5jb3VudHJ5ID0gY291bnRyeVswXS5pc28yOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgcGFzc3dvcmQgPSB0aGlzLnBhc3N3b3JkLAogICAgICAgICAgcGhvbmUgPSB0aGlzLnBob25lOwogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLmlzUGhvbmVBcHByb3ZlZCA/IHRoaXMuQVVUSF9MT0dJTih7CiAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogICAgICAgIHBob25lOiBwaG9uZQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSkgOiB0aGlzLkFVVEhfUkVRVUVTVChwaG9uZSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9CiAgfSksCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoWyJpc1Bob25lQXBwcm92ZWQiLCAiZ2V0RXJyb3JNZXNzYWdlIl0pKSwKICB3YXRjaDogewogICAgcGhvbmU6IGZ1bmN0aW9uIHBob25lKCkgewogICAgICB0aGlzLmdldENvdW50cnkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,SAAA,cAAA,QAAA,WAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,QADA;AAEA,MAAA,KAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,cAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,UAAA,EAAA;AACA,mBAAA;AADA,GAVA;AAaA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,cAAA,EAAA,YAAA,CAAA,CADA;AAEA,IAAA,UAAA,EAAA,sBAAA;AAAA;;AACA,UAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,OAAA,GAAA,YAAA,CAAA,MAAA,CAAA,UAAA,EAAA;AAAA,iBACA,CAAA,UAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,QAAA,GAAA,OAAA,CAAA,EAAA,CAAA,QAAA,CADA;AAAA,SAAA,CAAA;;AAEA,YAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,cAAA,MAAA,GAAA,OAAA,CAAA,KAAA,GAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,mBAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,GACA,CADA,GACA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,GACA,CADA,GACA,CAAA,CAFA;AAAA,WAAA,CAAA;AAGA,eAAA,OAAA,GAAA,MAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA,IAAA;AACA,SALA,MAKA;AACA,cAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA,KAAA,OAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IAAA;AACA;AACA;AACA,KAfA;AAgBA,IAAA,KAhBA,mBAgBA;AAAA;;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAEA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,eAAA,GACA,KAAA,UAAA,CAAA;AAAA,QAAA,QAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA,EAAA,IAAA,CACA;AAAA,eAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AAAA,OADA,CADA,GAIA,KAAA,YAAA,CAAA,KAAA,EAAA,IAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAFA,CAJA;AAOA;AA1BA,IAbA;AAyCA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,iBAAA,EAAA,iBAAA,CAAA,CADA,CAzCA;AA4CA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,iBAAA;AACA,WAAA,UAAA;AACA;AAHA;AA5CA,CAAA","sourcesContent":["<template>\n    <form class=\"form\" @submit.prevent=\"login\">\n      <label\n        class=\"login-form__label\">\n        <span>Введите номер телефона: </span>\n        <div class=\"login-form__check\">\n          <i :class=\"['flag-icon','flag-icon-' + country]\"></i>\n          <imask-input\n            v-if=\"!isPhoneApproved\"\n            ref=\"phone\"\n            class=\"login-form__input phone-input\"\n            v-model=\"phone\"\n            :mask=\"mask\"\n            :unmask=\"false\"\n            inputmode=\"numeric\"\n          />\n          <imask-input\n            v-if=\"isPhoneApproved\"\n            ref=\"password\"\n            class=\"login-form__input login-form__input--password\"\n            v-model=\"password\"\n            inputmode=\"numeric\"\n            type=\"password\"\n          />\n        </div>\n      </label>\n      <button\n        class=\"login-form__btn\"\n        type=\"submit\"\n      >\n        {{ isPhoneApproved ? \"Подтвердить\" : \"Отправить\" }}\n      </button>\n    </form>\n</template>\n\n<script>\n  import { mapGetters, mapActions } from \"vuex\";\n  import { IMaskComponent } from \"vue-imask\";\n  import allCountries from \"../constants/country.codes\";\n\n  export default {\n  name: \"Login\",\n    data() {\n      return {\n        password: process.env.NODE_ENV === \"production\" ? \"\" : \"000000\",\n        phone: process.env.NODE_ENV === \"production\" ? \"\" : \"380633076719\",\n        country: \"\",\n        mask: \"+000000000000000\"\n      }\n    },\n    components: {\n      \"imask-input\": IMaskComponent\n    },\n    methods: {\n      ...mapActions([\"AUTH_REQUEST\", \"AUTH_LOGIN\"]),\n      getCountry: function() {\n        if (this.phone.length > 1) {\n          const country = allCountries.filter(el =>\n            !parseFloat(this.phone).toString().indexOf(el.dialCode));\n          if (country.length > 1) {\n            const sorted = country.slice().sort((a, b) => parseFloat(b.priority)\n              ? 0 : parseFloat(a.priority) > parseFloat(b.priority)\n              ? 1 : -1);\n            this.country = sorted[country.length - 1].iso2;\n          } else {\n            if (country.length > 0) this.country = country[0].iso2;\n          }\n        }\n      },\n      login() {\n        const { password, phone } = this;\n        this.loading = true;\n        this.isPhoneApproved\n          ? this.AUTH_LOGIN({ password, phone }).then(\n          () => (this.loading = false)\n          )\n          : this.AUTH_REQUEST(phone).then(() => {\n              this.loading = false;\n          });\n      }\n    },\n    computed: {\n      ...mapGetters([\"isPhoneApproved\", \"getErrorMessage\"])\n    },\n    watch: {\n      phone: function() {\n        this.getCountry();\n      }\n    },\n  }\n</script>\n\n<style scoped lang=\"scss\">\n\n</style>\n"],"sourceRoot":"src/views"}]}