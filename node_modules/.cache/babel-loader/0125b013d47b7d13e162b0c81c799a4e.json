{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js","mtime":1586281134760},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2lubWUxL1BocHN0b3JtUHJvamVjdHMvbmV3LWNwL2RldmVsb3AuaW5tZS1nbWFpbC5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2lubWUxL1BocHN0b3JtUHJvamVjdHMvbmV3LWNwL2RldmVsb3AuaW5tZS1nbWFpbC5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwoKdmFyIF9hY3Rpb25zLCBfbXV0YXRpb25zOwoKaW1wb3J0IHsgTk9USUZJQ0FUSU9OU19SRVFVRVNULCBOT1RJRklDQVRJT05TX0ZJTFRFUiwgTk9USUZJQ0FUSU9OU19TVUNDRVNTLCBOT1RJRklDQVRJT05TX0VSUk9SLCBOT1RJRklDQVRJT05TX0ZJTFRFUl9DSEFOR0UsIE5PVElGSUNBVElPTlNfUkVBRCB9IGZyb20gIi4uL2FjdGlvbnMvbm90aWZpY2F0aW9ucyI7CmltcG9ydCB7IEFVVEhfTE9HT1VUIH0gZnJvbSAiLi4vYWN0aW9ucy9hdXRoIjsKaW1wb3J0IE5vdGlmaWNhdGlvbnNTZXJ2aWNlIGZyb20gIi4uLy4uL2FwaS9ub3RpZmljYXRpb25zLnNlcnZpY2UiOwppbXBvcnQgTm90aWZpY2F0aW9uc01vZGVsIGZyb20gIi4uL21vZGVscy9ub3RpZmljYXRpb25zIjsKdmFyIHN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgTm90aWZpY2F0aW9uc01vZGVsKTsKdmFyIGdldHRlcnMgPSB7CiAgaXNOb3RpZmljYXRpb25zOiBmdW5jdGlvbiBpc05vdGlmaWNhdGlvbnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5zdGF0dXM7CiAgfSwKICBnZXROZXdOb3RpZmljYXRpb25zOiBmdW5jdGlvbiBnZXROZXdOb3RpZmljYXRpb25zKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudG90YWxfbmV3OwogIH0sCiAgZ2V0VG90YWxOb3RpZmljYXRpb25zOiBmdW5jdGlvbiBnZXRUb3RhbE5vdGlmaWNhdGlvbnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS50b3RhbDsKICB9LAogIGdldE5vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIGdldE5vdGlmaWNhdGlvbnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5ub3RpZmljYXRpb25zOwogIH0KfTsKdmFyIGFjdGlvbnMgPSAoX2FjdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBOT1RJRklDQVRJT05TX1JFUVVFU1QsIGZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIHI7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7CiAgICAgICAgICAgIGNvbW1pdChOT1RJRklDQVRJT05TX1JFUVVFU1QpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIE5vdGlmaWNhdGlvbnNTZXJ2aWNlLmdldE5vdGlmaWNhdGlvbnMoc3RhdGUuZmlsdGVyKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIHIgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByLmRhdGEuc3RhdHVzID8gY29tbWl0KE5PVElGSUNBVElPTlNfU1VDQ0VTUywgci5kYXRhKSA6IGRpc3BhdGNoKE5PVElGSUNBVElPTlNfRVJST1IpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgTk9USUZJQ0FUSU9OU19GSUxURVJfQ0hBTkdFLCBmdW5jdGlvbiAoX3JlZjMsIF9yZWY0KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdCwKICAgICAgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaDsKICB2YXIgb3B0aW9ucyA9IF9yZWY0Lm9wdGlvbnM7CiAgY29tbWl0KE5PVElGSUNBVElPTlNfUkVRVUVTVCk7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICBjb21taXQoTk9USUZJQ0FUSU9OU19GSUxURVJfQ0hBTkdFLCBvcHRpb25zKTsKICAgIGRpc3BhdGNoKE5PVElGSUNBVElPTlNfUkVRVUVTVCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiByZXNvbHZlKCk7CiAgICB9KTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgTk9USUZJQ0FUSU9OU19SRUFELCBmdW5jdGlvbiAoX3JlZjUpIHsKICB2YXIgZGlzcGF0Y2ggPSBfcmVmNS5kaXNwYXRjaDsKICBkaXNwYXRjaChOT1RJRklDQVRJT05TX1JFUVVFU1QpOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBOT1RJRklDQVRJT05TX0VSUk9SLCBmdW5jdGlvbiAoX3JlZjYpIHsKICB2YXIgY29tbWl0ID0gX3JlZjYuY29tbWl0LAogICAgICBkaXNwYXRjaCA9IF9yZWY2LmRpc3BhdGNoOwogIGNvbW1pdChOT1RJRklDQVRJT05TX0VSUk9SKTsKICBkaXNwYXRjaChBVVRIX0xPR09VVCk7Cn0pLCBfYWN0aW9ucyk7CnZhciBtdXRhdGlvbnMgPSAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTk9USUZJQ0FUSU9OU19SRVFVRVNULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5zdGF0dXMgPSBmYWxzZTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBOT1RJRklDQVRJT05TX1NVQ0NFU1MsIGZ1bmN0aW9uIChzdGF0ZSwgbm90aWZpY2F0aW9ucykgewogIHN0YXRlLnN0YXR1cyA9IHRydWU7CiAgc3RhdGUudG90YWwgPSBub3RpZmljYXRpb25zLnRvdGFsOwogIHN0YXRlLnRvdGFsX25ldyA9IG5vdGlmaWNhdGlvbnMudG90YWxfbmV3OwogIHN0YXRlLnRvdGFsX3JlYWQgPSBub3RpZmljYXRpb25zLnRvdGFsX3JlYWQ7CiAgc3RhdGUubm90aWZpY2F0aW9ucyA9IG5vdGlmaWNhdGlvbnMubm90aWZpY2F0aW9uczsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBOT1RJRklDQVRJT05TX0ZJTFRFUl9DSEFOR0UsIGZ1bmN0aW9uIChzdGF0ZSwgb3B0aW9ucykgewogIHN0YXRlLnN0YXR1cyA9IGZhbHNlOwoKICBmb3IgKHZhciBvcHRpb24gaW4gb3B0aW9ucykgewogICAgc3RhdGUuZmlsdGVyW29wdGlvbl0gPSBvcHRpb25zW29wdGlvbl0gIT0gIiIgPyBvcHRpb25zW29wdGlvbl0gOiBzdGF0ZS5maWx0ZXJbb3B0aW9uXTsKICB9Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTk9USUZJQ0FUSU9OU19FUlJPUiwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuc3RhdHVzID0gZmFsc2U7Cn0pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js"],"names":["NOTIFICATIONS_REQUEST","NOTIFICATIONS_FILTER","NOTIFICATIONS_SUCCESS","NOTIFICATIONS_ERROR","NOTIFICATIONS_FILTER_CHANGE","NOTIFICATIONS_READ","AUTH_LOGOUT","NotificationsService","NotificationsModel","state","Object","assign","getters","isNotifications","status","getNewNotifications","total_new","getTotalNotifications","total","getNotifications","notifications","actions","commit","dispatch","filter","r","data","options","Promise","resolve","then","mutations","total_read","option"],"mappings":"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","sourcesContent":["import {\nNOTIFICATIONS_REQUEST,\nNOTIFICATIONS_FILTER,\nNOTIFICATIONS_SUCCESS,\nNOTIFICATIONS_ERROR,\nNOTIFICATIONS_FILTER_CHANGE,\nNOTIFICATIONS_READ\n} from \"../actions/notifications\";\n\nimport { AUTH_LOGOUT } from \"../actions/auth\";\n\nimport NotificationsService from \"../../api/notifications.service\";\nimport NotificationsModel from \"../models/notifications\";\n\nconst state = Object.assign({}, NotificationsModel);\n\nconst getters = {\n  isNotifications: state => state.status,\n  getNewNotifications: state => state.total_new,\n  getTotalNotifications: state => state.total,\n  getNotifications: state => state.notifications\n};\n\nconst actions = {\n  [NOTIFICATIONS_REQUEST]: async ({ commit, dispatch }) => {\n    commit(NOTIFICATIONS_REQUEST);\n    const r = await NotificationsService.getNotifications(state.filter);\n\n    r.data.status\n      ? commit(NOTIFICATIONS_SUCCESS, r.data)\n      : dispatch(NOTIFICATIONS_ERROR);\n  },\n\n  [NOTIFICATIONS_FILTER_CHANGE]: ({ commit, dispatch }, { options }) => {\n    commit(NOTIFICATIONS_REQUEST);\n    return new Promise(resolve => {\n      commit(NOTIFICATIONS_FILTER_CHANGE, options);\n      dispatch(NOTIFICATIONS_REQUEST).then(() => resolve());\n    });\n  },\n  [NOTIFICATIONS_READ]: ({dispatch} ) => {\n    dispatch(NOTIFICATIONS_REQUEST);\n\n  },\n  [NOTIFICATIONS_ERROR]: ({ commit, dispatch} ) => {\n    commit(NOTIFICATIONS_ERROR);\n    dispatch(AUTH_LOGOUT);\n  }\n\n};\n\nconst mutations = {\n  [NOTIFICATIONS_REQUEST]: state => {\n    state.status = false;\n  },\n  [NOTIFICATIONS_SUCCESS]: (state, notifications) => {\n    state.status = true;\n    state.total = notifications.total;\n    state.total_new = notifications.total_new;\n    state.total_read = notifications.total_read;\n    state.notifications = notifications.notifications;\n  },\n  [NOTIFICATIONS_FILTER_CHANGE]: (state, options) => {\n    state.status = false;\n    for (let option in options) {\n      state.filter[option] = options[option] != \"\" ? options[option] : state.filter[option];\n    }\n  },\n  [NOTIFICATIONS_ERROR]: state => {\n    state.status = false;\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}