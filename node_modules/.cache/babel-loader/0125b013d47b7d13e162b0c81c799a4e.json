{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js","mtime":1586283590771},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgppbXBvcnQgeyBOT1RJRklDQVRJT05TX1JFUVVFU1QsIE5PVElGSUNBVElPTlNfRklMVEVSLCBOT1RJRklDQVRJT05TX1NVQ0NFU1MsIE5PVElGSUNBVElPTlNfRVJST1IsIE5PVElGSUNBVElPTlNfRklMVEVSX0NIQU5HRSwgTk9USUZJQ0FUSU9OU19SRUFEIH0gZnJvbSAiLi4vYWN0aW9ucy9ub3RpZmljYXRpb25zIjsKaW1wb3J0IHsgQVVUSF9MT0dPVVQgfSBmcm9tICIuLi9hY3Rpb25zL2F1dGgiOwppbXBvcnQgTm90aWZpY2F0aW9uc1NlcnZpY2UgZnJvbSAiLi4vLi4vYXBpL25vdGlmaWNhdGlvbnMuc2VydmljZSI7CmltcG9ydCBOb3RpZmljYXRpb25zTW9kZWwgZnJvbSAiLi4vbW9kZWxzL25vdGlmaWNhdGlvbnMiOwp2YXIgc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCBOb3RpZmljYXRpb25zTW9kZWwpOwp2YXIgZ2V0dGVycyA9IHsKICBpc05vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIGlzTm90aWZpY2F0aW9ucyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnN0YXR1czsKICB9LAogIGdldE5ld05vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIGdldE5ld05vdGlmaWNhdGlvbnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS50b3RhbF9uZXc7CiAgfSwKICBnZXRUb3RhbE5vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIGdldFRvdGFsTm90aWZpY2F0aW9ucyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnRvdGFsOwogIH0sCiAgZ2V0SGVhZGVyTm90aWZpY2F0aW9uczogZnVuY3Rpb24gZ2V0SGVhZGVyTm90aWZpY2F0aW9ucyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLm5vdGlmaWNhdGlvbnMuc2xpY2UoMCwgMTApOwogIH0sCiAgZ2V0QWxsTm90aWZpY2F0aW9uczogZnVuY3Rpb24gZ2V0QWxsTm90aWZpY2F0aW9ucyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLm5vdGlmaWNhdGlvbnM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIE5PVElGSUNBVElPTlNfUkVRVUVTVCwgZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmLCBfcmVmMikgewogICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIGxpbWl0LCBkYXRlX2Zyb20sIGRhdGVfdG8sIG9mZnNldCwgdHlwZSwgcjsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQsIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgICAgICAgICAgbGltaXQgPSBfcmVmMi5saW1pdCwgZGF0ZV9mcm9tID0gX3JlZjIuZGF0ZV9mcm9tLCBkYXRlX3RvID0gX3JlZjIuZGF0ZV90bywgb2Zmc2V0ID0gX3JlZjIub2Zmc2V0LCB0eXBlID0gX3JlZjIudHlwZTsKICAgICAgICAgICAgY29tbWl0KE5PVElGSUNBVElPTlNfUkVRVUVTVCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gTm90aWZpY2F0aW9uc1NlcnZpY2UuZ2V0Tm90aWZpY2F0aW9ucyh7CiAgICAgICAgICAgICAgbGltaXQ6IGxpbWl0IHx8IHN0YXRlLmZpbHRlci5saW1pdCwKICAgICAgICAgICAgICBkYXRlX2Zyb206IGRhdGVfZnJvbSB8fCBzdGF0ZS5maWx0ZXIuZGF0ZV9mcm9tLAogICAgICAgICAgICAgIGRhdGVfdG86IGRhdGVfdG8gfHwgc3RhdGUuZmlsdGVyLmRhdGVfdG8sCiAgICAgICAgICAgICAgb2Zmc2V0OiBvZmZzZXQgfHwgc3RhdGUuZmlsdGVyLm9mZnNldCwKICAgICAgICAgICAgICB0eXBlOiB0eXBlIHx8IHN0YXRlLmZpbHRlci50eXBlCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgciA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHIuZGF0YS5zdGF0dXMgPyBjb21taXQoTk9USUZJQ0FUSU9OU19TVUNDRVNTLCByLmRhdGEpIDogZGlzcGF0Y2goTk9USUZJQ0FUSU9OU19FUlJPUik7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyKSB7CiAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIE5PVElGSUNBVElPTlNfRklMVEVSX0NIQU5HRSwgZnVuY3Rpb24gKF9yZWY0LCBfcmVmNSkgewogIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQsCiAgICAgIGRpc3BhdGNoID0gX3JlZjQuZGlzcGF0Y2g7CiAgdmFyIG9wdGlvbnMgPSBfcmVmNS5vcHRpb25zOwogIGNvbW1pdChOT1RJRklDQVRJT05TX1JFUVVFU1QpOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgY29tbWl0KE5PVElGSUNBVElPTlNfRklMVEVSX0NIQU5HRSwgb3B0aW9ucyk7CiAgICBkaXNwYXRjaChOT1RJRklDQVRJT05TX1JFUVVFU1QpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gcmVzb2x2ZSgpOwogICAgfSk7CiAgfSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIE5PVElGSUNBVElPTlNfUkVBRCwgZnVuY3Rpb24gKF9yZWY2KSB7CiAgdmFyIGRpc3BhdGNoID0gX3JlZjYuZGlzcGF0Y2g7CiAgZGlzcGF0Y2goTk9USUZJQ0FUSU9OU19SRVFVRVNUKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgTk9USUZJQ0FUSU9OU19FUlJPUiwgZnVuY3Rpb24gKF9yZWY3KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY3LmNvbW1pdCwKICAgICAgZGlzcGF0Y2ggPSBfcmVmNy5kaXNwYXRjaDsKICBjb21taXQoTk9USUZJQ0FUSU9OU19FUlJPUik7CiAgZGlzcGF0Y2goQVVUSF9MT0dPVVQpOwp9KSwgX2FjdGlvbnMpOwp2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE5PVElGSUNBVElPTlNfUkVRVUVTVCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuc3RhdHVzID0gZmFsc2U7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTk9USUZJQ0FUSU9OU19TVUNDRVNTLCBmdW5jdGlvbiAoc3RhdGUsIG5vdGlmaWNhdGlvbnMpIHsKICBzdGF0ZS5zdGF0dXMgPSB0cnVlOwogIHN0YXRlLnRvdGFsID0gbm90aWZpY2F0aW9ucy50b3RhbDsKICBzdGF0ZS50b3RhbF9uZXcgPSBub3RpZmljYXRpb25zLnRvdGFsX25ldzsKICBzdGF0ZS50b3RhbF9yZWFkID0gbm90aWZpY2F0aW9ucy50b3RhbF9yZWFkOwogIHN0YXRlLm5vdGlmaWNhdGlvbnMgPSBub3RpZmljYXRpb25zLm5vdGlmaWNhdGlvbnM7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTk9USUZJQ0FUSU9OU19GSUxURVJfQ0hBTkdFLCBmdW5jdGlvbiAoc3RhdGUsIG9wdGlvbnMpIHsKICBzdGF0ZS5zdGF0dXMgPSBmYWxzZTsKCiAgZm9yICh2YXIgb3B0aW9uIGluIG9wdGlvbnMpIHsKICAgIHN0YXRlLmZpbHRlcltvcHRpb25dID0gb3B0aW9uc1tvcHRpb25dICE9ICIiID8gb3B0aW9uc1tvcHRpb25dIDogc3RhdGUuZmlsdGVyW29wdGlvbl07CiAgfQp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE5PVElGSUNBVElPTlNfRVJST1IsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLnN0YXR1cyA9IGZhbHNlOwp9KSwgX211dGF0aW9ucyk7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js"],"names":["NOTIFICATIONS_REQUEST","NOTIFICATIONS_FILTER","NOTIFICATIONS_SUCCESS","NOTIFICATIONS_ERROR","NOTIFICATIONS_FILTER_CHANGE","NOTIFICATIONS_READ","AUTH_LOGOUT","NotificationsService","NotificationsModel","state","Object","assign","getters","isNotifications","status","getNewNotifications","total_new","getTotalNotifications","total","getHeaderNotifications","notifications","slice","getAllNotifications","actions","commit","dispatch","limit","date_from","date_to","offset","type","getNotifications","filter","r","data","options","Promise","resolve","then","mutations","total_read","option"],"mappings":"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","sourcesContent":["import {\nNOTIFICATIONS_REQUEST,\nNOTIFICATIONS_FILTER,\nNOTIFICATIONS_SUCCESS,\nNOTIFICATIONS_ERROR,\nNOTIFICATIONS_FILTER_CHANGE,\nNOTIFICATIONS_READ\n} from \"../actions/notifications\";\n\nimport { AUTH_LOGOUT } from \"../actions/auth\";\n\nimport NotificationsService from \"../../api/notifications.service\";\nimport NotificationsModel from \"../models/notifications\";\n\nconst state = Object.assign({}, NotificationsModel);\n\nconst getters = {\n  isNotifications: state => state.status,\n  getNewNotifications: state => state.total_new,\n  getTotalNotifications: state => state.total,\n  getHeaderNotifications: state => state.notifications.slice(0, 10),\n  getAllNotifications: state => state.notifications\n};\n\nconst actions = {\n  [NOTIFICATIONS_REQUEST]: async ({ commit, dispatch }, { limit, date_from, date_to, offset, type } ) => {\n    commit(NOTIFICATIONS_REQUEST);\n    const r = await NotificationsService.getNotifications({\n      limit: limit || state.filter.limit,\n      date_from: date_from || state.filter.date_from,\n      date_to: date_to || state.filter.date_to,\n      offset: offset || state.filter.offset,\n      type: type || state.filter.type\n    });\n    r.data.status\n      ? commit(NOTIFICATIONS_SUCCESS,r.data)\n      : dispatch(NOTIFICATIONS_ERROR);\n  },\n\n  [NOTIFICATIONS_FILTER_CHANGE]: ({ commit, dispatch }, { options }) => {\n    commit(NOTIFICATIONS_REQUEST);\n    return new Promise(resolve => {\n      commit(NOTIFICATIONS_FILTER_CHANGE, options);\n      dispatch(NOTIFICATIONS_REQUEST).then(() => resolve());\n    });\n  },\n  [NOTIFICATIONS_READ]: ({dispatch} ) => {\n    dispatch(NOTIFICATIONS_REQUEST);\n\n  },\n  [NOTIFICATIONS_ERROR]: ({ commit, dispatch} ) => {\n    commit(NOTIFICATIONS_ERROR);\n    dispatch(AUTH_LOGOUT);\n  }\n\n};\n\nconst mutations = {\n  [NOTIFICATIONS_REQUEST]: state => {\n    state.status = false;\n  },\n  [NOTIFICATIONS_SUCCESS]: (state, notifications) => {\n    state.status = true;\n    state.total = notifications.total;\n    state.total_new = notifications.total_new;\n    state.total_read = notifications.total_read;\n    state.notifications = notifications.notifications;\n  },\n  [NOTIFICATIONS_FILTER_CHANGE]: (state, options) => {\n    state.status = false;\n    for (let option in options) {\n      state.filter[option] = options[option] != \"\" ? options[option] : state.filter[option];\n    }\n  },\n  [NOTIFICATIONS_ERROR]: state => {\n    state.status = false;\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}