{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js","mtime":1586389515677},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL1VzZXJzL2lubWUxL1BocHN0b3JtUHJvamVjdHMvbmV3LWNwL2RldmVsb3AuaW5tZS1nbWFpbC5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgppbXBvcnQgeyBOT1RJRklDQVRJT05TX1JFUVVFU1QsIE5PVElGSUNBVElPTlNfRklMVEVSLCBOT1RJRklDQVRJT05TX1NVQ0NFU1MsIE5PVElGSUNBVElPTlNfRVJST1IsIE5PVElGSUNBVElPTlNfRklMVEVSX0NIQU5HRSwgTk9USUZJQ0FUSU9OU19SRUFEIH0gZnJvbSAiLi4vYWN0aW9ucy9ub3RpZmljYXRpb25zIjsKaW1wb3J0IHsgQVVUSF9MT0dPVVQgfSBmcm9tICIuLi9hY3Rpb25zL2F1dGgiOwppbXBvcnQgTm90aWZpY2F0aW9uc1NlcnZpY2UgZnJvbSAiLi4vLi4vYXBpL25vdGlmaWNhdGlvbnMuc2VydmljZSI7CmltcG9ydCBOb3RpZmljYXRpb25zTW9kZWwgZnJvbSAiLi4vbW9kZWxzL25vdGlmaWNhdGlvbnMiOwp2YXIgc3RhdGUgPSBOb3RpZmljYXRpb25zTW9kZWwoKTsKdmFyIGdldHRlcnMgPSB7CiAgaXNOb3RpZmljYXRpb25zOiBmdW5jdGlvbiBpc05vdGlmaWNhdGlvbnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5zdGF0dXM7CiAgfSwKICBnZXROZXdOb3RpZmljYXRpb25zOiBmdW5jdGlvbiBnZXROZXdOb3RpZmljYXRpb25zKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudG90YWxfbmV3OwogIH0sCiAgZ2V0VG90YWxOb3RpZmljYXRpb25zOiBmdW5jdGlvbiBnZXRUb3RhbE5vdGlmaWNhdGlvbnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS50b3RhbDsKICB9LAogIGdldE5vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIGdldE5vdGlmaWNhdGlvbnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5ub3RpZmljYXRpb25zOwogIH0KfTsKdmFyIGFjdGlvbnMgPSAoX2FjdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBOT1RJRklDQVRJT05TX1JFUVVFU1QsIGZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIHI7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7CiAgICAgICAgICAgIGNvbW1pdChOT1RJRklDQVRJT05TX1JFUVVFU1QpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIE5vdGlmaWNhdGlvbnNTZXJ2aWNlLmdldE5vdGlmaWNhdGlvbnMoc3RhdGUuZmlsdGVyKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIHIgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByLmRhdGEuc3RhdHVzID8gY29tbWl0KE5PVElGSUNBVElPTlNfU1VDQ0VTUywgci5kYXRhKSA6IGRpc3BhdGNoKE5PVElGSUNBVElPTlNfRVJST1IpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgTk9USUZJQ0FUSU9OU19GSUxURVJfQ0hBTkdFLCBmdW5jdGlvbiAoX3JlZjMsIF9yZWY0KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdCwKICAgICAgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaDsKICB2YXIgb3B0aW9ucyA9IF9yZWY0Lm9wdGlvbnM7CiAgY29tbWl0KE5PVElGSUNBVElPTlNfUkVRVUVTVCk7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICBjb21taXQoTk9USUZJQ0FUSU9OU19GSUxURVJfQ0hBTkdFLCBvcHRpb25zKTsKICAgIGRpc3BhdGNoKE5PVElGSUNBVElPTlNfUkVRVUVTVCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiByZXNvbHZlKCk7CiAgICB9KTsKICB9KTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgTk9USUZJQ0FUSU9OU19SRUFELCBmdW5jdGlvbiAoX3JlZjUpIHsKICB2YXIgZGlzcGF0Y2ggPSBfcmVmNS5kaXNwYXRjaDsKICBkaXNwYXRjaChOT1RJRklDQVRJT05TX1JFUVVFU1QpOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBOT1RJRklDQVRJT05TX0VSUk9SLCBmdW5jdGlvbiAoX3JlZjYpIHsKICB2YXIgY29tbWl0ID0gX3JlZjYuY29tbWl0LAogICAgICBkaXNwYXRjaCA9IF9yZWY2LmRpc3BhdGNoOwogIGNvbW1pdChOT1RJRklDQVRJT05TX0VSUk9SKTsKICBkaXNwYXRjaChBVVRIX0xPR09VVCk7Cn0pLCBfYWN0aW9ucyk7CnZhciBtdXRhdGlvbnMgPSAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTk9USUZJQ0FUSU9OU19SRVFVRVNULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5zdGF0dXMgPSBmYWxzZTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBOT1RJRklDQVRJT05TX1NVQ0NFU1MsIGZ1bmN0aW9uIChzdGF0ZSwgbm90aWZpY2F0aW9ucykgewogIHN0YXRlLnN0YXR1cyA9IHRydWU7CiAgc3RhdGUudG90YWwgPSBub3RpZmljYXRpb25zLnRvdGFsOwogIHN0YXRlLnRvdGFsX25ldyA9IG5vdGlmaWNhdGlvbnMudG90YWxfbmV3OwogIHN0YXRlLnRvdGFsX3JlYWQgPSBub3RpZmljYXRpb25zLnRvdGFsX3JlYWQ7CgogIGlmICghcGFyc2VJbnQoc3RhdGUub2Zmc2V0KSkgewogICAgc3RhdGUubm90aWZpY2F0aW9ucyA9IG5vdGlmaWNhdGlvbnMubm90aWZpY2F0aW9uczsKICB9IGVsc2UgewogICAgc3RhdGUubm90aWZpY2F0aW9ucyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUubm90aWZpY2F0aW9ucyksIFtub3RpZmljYXRpb25zLm5vdGlmaWNhdGlvbnNdKTsKICB9Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTk9USUZJQ0FUSU9OU19GSUxURVJfQ0hBTkdFLCBmdW5jdGlvbiAoc3RhdGUsIG9wdGlvbnMpIHsKICBzdGF0ZS5zdGF0dXMgPSBmYWxzZTsKCiAgZm9yICh2YXIgb3B0aW9uIGluIG9wdGlvbnMpIHsKICAgIHN0YXRlLmZpbHRlcltvcHRpb25dID0gb3B0aW9uc1tvcHRpb25dICE9ICIiID8gb3B0aW9uc1tvcHRpb25dIDogc3RhdGUuZmlsdGVyW29wdGlvbl07CiAgfQp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE5PVElGSUNBVElPTlNfRVJST1IsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLnN0YXR1cyA9IGZhbHNlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFVVEhfTE9HT1VULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBPYmplY3QuYXNzaWduKHN0YXRlLCBOb3RpZmljYXRpb25zTW9kZWwoKSk7Cn0pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js"],"names":["NOTIFICATIONS_REQUEST","NOTIFICATIONS_FILTER","NOTIFICATIONS_SUCCESS","NOTIFICATIONS_ERROR","NOTIFICATIONS_FILTER_CHANGE","NOTIFICATIONS_READ","AUTH_LOGOUT","NotificationsService","NotificationsModel","state","getters","isNotifications","status","getNewNotifications","total_new","getTotalNotifications","total","getNotifications","notifications","actions","commit","dispatch","filter","r","data","options","Promise","resolve","then","mutations","total_read","parseInt","offset","option","Object","assign"],"mappings":"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","sourcesContent":["import {\nNOTIFICATIONS_REQUEST,\nNOTIFICATIONS_FILTER,\nNOTIFICATIONS_SUCCESS,\nNOTIFICATIONS_ERROR,\nNOTIFICATIONS_FILTER_CHANGE,\nNOTIFICATIONS_READ\n} from \"../actions/notifications\";\n\nimport { AUTH_LOGOUT } from \"../actions/auth\";\n\nimport NotificationsService from \"../../api/notifications.service\";\nimport NotificationsModel from \"../models/notifications\";\n\nconst state = NotificationsModel();\n\nconst getters = {\n  isNotifications: state => state.status,\n  getNewNotifications: state => state.total_new,\n  getTotalNotifications: state => state.total,\n  getNotifications: state => state.notifications\n};\n\nconst actions = {\n  [NOTIFICATIONS_REQUEST]: async ( { commit, dispatch } ) => {\n    commit(NOTIFICATIONS_REQUEST);\n    const r = await NotificationsService.getNotifications(state.filter);\n\n    r.data.status\n      ? commit(NOTIFICATIONS_SUCCESS, r.data)\n      : dispatch(NOTIFICATIONS_ERROR);\n  },\n\n  [NOTIFICATIONS_FILTER_CHANGE]: ({ commit, dispatch }, { options }) => {\n    commit(NOTIFICATIONS_REQUEST);\n    return new Promise(resolve => {\n      commit(NOTIFICATIONS_FILTER_CHANGE, options);\n      dispatch(NOTIFICATIONS_REQUEST).then(() => resolve());\n    });\n  },\n  [NOTIFICATIONS_READ]: ({dispatch} ) => {\n    dispatch(NOTIFICATIONS_REQUEST);\n\n  },\n  [NOTIFICATIONS_ERROR]: ({ commit, dispatch} ) => {\n    commit(NOTIFICATIONS_ERROR);\n    dispatch(AUTH_LOGOUT);\n  }\n\n};\n\nconst mutations = {\n  [NOTIFICATIONS_REQUEST]: state => {\n    state.status = false;\n  },\n  [NOTIFICATIONS_SUCCESS]: (state, notifications) => {\n    state.status = true;\n    state.total = notifications.total;\n    state.total_new = notifications.total_new;\n    state.total_read = notifications.total_read;\n    if ( !parseInt(state.offset) ) {\n      state.notifications = notifications.notifications;\n    } else {\n      state.notifications = [...state.notifications, notifications.notifications];\n    }\n\n  },\n  [NOTIFICATIONS_FILTER_CHANGE]: (state, options) => {\n    state.status = false;\n    for (let option in options) {\n      state.filter[option] = options[option] != \"\" ? options[option] : state.filter[option];\n    }\n  },\n  [NOTIFICATIONS_ERROR]: state => {\n    state.status = false;\n  },\n  [AUTH_LOGOUT]: state => {\n    Object.assign(state, NotificationsModel())\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}