{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js","mtime":1586284070092},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL1VzZXJzL2lubWUxL1BocHN0b3JtUHJvamVjdHMvbmV3LWNwL2RldmVsb3AuaW5tZS1nbWFpbC5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgppbXBvcnQgeyBOT1RJRklDQVRJT05TX1JFUVVFU1QsIE5PVElGSUNBVElPTlNfRklMVEVSLCBOT1RJRklDQVRJT05TX1NVQ0NFU1MsIE5PVElGSUNBVElPTlNfRVJST1IsIE5PVElGSUNBVElPTlNfRklMVEVSX0NIQU5HRSwgTk9USUZJQ0FUSU9OU19SRUFEIH0gZnJvbSAiLi4vYWN0aW9ucy9ub3RpZmljYXRpb25zIjsKaW1wb3J0IHsgQVVUSF9MT0dPVVQgfSBmcm9tICIuLi9hY3Rpb25zL2F1dGgiOwppbXBvcnQgTm90aWZpY2F0aW9uc1NlcnZpY2UgZnJvbSAiLi4vLi4vYXBpL25vdGlmaWNhdGlvbnMuc2VydmljZSI7CmltcG9ydCBOb3RpZmljYXRpb25zTW9kZWwgZnJvbSAiLi4vbW9kZWxzL25vdGlmaWNhdGlvbnMiOwp2YXIgc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCBOb3RpZmljYXRpb25zTW9kZWwpOwp2YXIgZ2V0dGVycyA9IHsKICBpc05vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIGlzTm90aWZpY2F0aW9ucyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnN0YXR1czsKICB9LAogIGdldE5ld05vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIGdldE5ld05vdGlmaWNhdGlvbnMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS50b3RhbF9uZXc7CiAgfSwKICBnZXRUb3RhbE5vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIGdldFRvdGFsTm90aWZpY2F0aW9ucyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnRvdGFsOwogIH0sCiAgZ2V0Tm90aWZpY2F0aW9uczogZnVuY3Rpb24gZ2V0Tm90aWZpY2F0aW9ucyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLm5vdGlmaWNhdGlvbnM7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIE5PVElGSUNBVElPTlNfUkVRVUVTVCwgZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmKSB7CiAgICB2YXIgY29tbWl0LCBkaXNwYXRjaCwgcjsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQsIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgICAgICAgICAgY29tbWl0KE5PVElGSUNBVElPTlNfUkVRVUVTVCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICByZXR1cm4gTm90aWZpY2F0aW9uc1NlcnZpY2UuZ2V0Tm90aWZpY2F0aW9ucyhzdGF0ZS5maWx0ZXIpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgciA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHIuZGF0YS5zdGF0dXMgPyBjb21taXQoTk9USUZJQ0FUSU9OU19TVUNDRVNTLCByLmRhdGEpIDogZGlzcGF0Y2goTk9USUZJQ0FUSU9OU19FUlJPUik7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBOT1RJRklDQVRJT05TX0ZJTFRFUl9DSEFOR0UsIGZ1bmN0aW9uIChfcmVmMywgX3JlZjQpIHsKICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0LAogICAgICBkaXNwYXRjaCA9IF9yZWYzLmRpc3BhdGNoOwogIHZhciBvcHRpb25zID0gX3JlZjQub3B0aW9uczsKICBjb21taXQoTk9USUZJQ0FUSU9OU19SRVFVRVNUKTsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIGNvbW1pdChOT1RJRklDQVRJT05TX0ZJTFRFUl9DSEFOR0UsIG9wdGlvbnMpOwogICAgZGlzcGF0Y2goTk9USUZJQ0FUSU9OU19SRVFVRVNUKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHJlc29sdmUoKTsKICAgIH0pOwogIH0pOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBOT1RJRklDQVRJT05TX1JFQUQsIGZ1bmN0aW9uIChfcmVmNSkgewogIHZhciBkaXNwYXRjaCA9IF9yZWY1LmRpc3BhdGNoOwogIGRpc3BhdGNoKE5PVElGSUNBVElPTlNfUkVRVUVTVCk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIE5PVElGSUNBVElPTlNfRVJST1IsIGZ1bmN0aW9uIChfcmVmNikgewogIHZhciBjb21taXQgPSBfcmVmNi5jb21taXQsCiAgICAgIGRpc3BhdGNoID0gX3JlZjYuZGlzcGF0Y2g7CiAgY29tbWl0KE5PVElGSUNBVElPTlNfRVJST1IpOwogIGRpc3BhdGNoKEFVVEhfTE9HT1VUKTsKfSksIF9hY3Rpb25zKTsKdmFyIG11dGF0aW9ucyA9IChfbXV0YXRpb25zID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBOT1RJRklDQVRJT05TX1JFUVVFU1QsIGZ1bmN0aW9uIChzdGF0ZSkgewogIHN0YXRlLnN0YXR1cyA9IGZhbHNlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE5PVElGSUNBVElPTlNfU1VDQ0VTUywgZnVuY3Rpb24gKHN0YXRlLCBub3RpZmljYXRpb25zKSB7CiAgc3RhdGUuc3RhdHVzID0gdHJ1ZTsKICBzdGF0ZS50b3RhbCA9IG5vdGlmaWNhdGlvbnMudG90YWw7CiAgc3RhdGUudG90YWxfbmV3ID0gbm90aWZpY2F0aW9ucy50b3RhbF9uZXc7CiAgc3RhdGUudG90YWxfcmVhZCA9IG5vdGlmaWNhdGlvbnMudG90YWxfcmVhZDsKCiAgaWYgKCFwYXJzZUludChzdGF0ZS5vZmZzZXQpKSB7CiAgICBzdGF0ZS5ub3RpZmljYXRpb25zID0gbm90aWZpY2F0aW9ucy5ub3RpZmljYXRpb25zOwogIH0gZWxzZSB7CiAgICBzdGF0ZS5ub3RpZmljYXRpb25zID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShzdGF0ZS5ub3RpZmljYXRpb25zKSwgW25vdGlmaWNhdGlvbnMubm90aWZpY2F0aW9uc10pOwogIH0KfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBOT1RJRklDQVRJT05TX0ZJTFRFUl9DSEFOR0UsIGZ1bmN0aW9uIChzdGF0ZSwgb3B0aW9ucykgewogIHN0YXRlLnN0YXR1cyA9IGZhbHNlOwoKICBmb3IgKHZhciBvcHRpb24gaW4gb3B0aW9ucykgewogICAgc3RhdGUuZmlsdGVyW29wdGlvbl0gPSBvcHRpb25zW29wdGlvbl0gIT0gIiIgPyBvcHRpb25zW29wdGlvbl0gOiBzdGF0ZS5maWx0ZXJbb3B0aW9uXTsKICB9Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTk9USUZJQ0FUSU9OU19FUlJPUiwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuc3RhdHVzID0gZmFsc2U7Cn0pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/notifications.js"],"names":["NOTIFICATIONS_REQUEST","NOTIFICATIONS_FILTER","NOTIFICATIONS_SUCCESS","NOTIFICATIONS_ERROR","NOTIFICATIONS_FILTER_CHANGE","NOTIFICATIONS_READ","AUTH_LOGOUT","NotificationsService","NotificationsModel","state","Object","assign","getters","isNotifications","status","getNewNotifications","total_new","getTotalNotifications","total","getNotifications","notifications","actions","commit","dispatch","filter","r","data","options","Promise","resolve","then","mutations","total_read","parseInt","offset","option"],"mappings":"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","sourcesContent":["import {\nNOTIFICATIONS_REQUEST,\nNOTIFICATIONS_FILTER,\nNOTIFICATIONS_SUCCESS,\nNOTIFICATIONS_ERROR,\nNOTIFICATIONS_FILTER_CHANGE,\nNOTIFICATIONS_READ\n} from \"../actions/notifications\";\n\nimport { AUTH_LOGOUT } from \"../actions/auth\";\n\nimport NotificationsService from \"../../api/notifications.service\";\nimport NotificationsModel from \"../models/notifications\";\n\nconst state = Object.assign({}, NotificationsModel);\n\nconst getters = {\n  isNotifications: state => state.status,\n  getNewNotifications: state => state.total_new,\n  getTotalNotifications: state => state.total,\n  getNotifications: state => state.notifications\n};\n\nconst actions = {\n  [NOTIFICATIONS_REQUEST]: async ( { commit, dispatch } ) => {\n    commit(NOTIFICATIONS_REQUEST);\n    const r = await NotificationsService.getNotifications(state.filter);\n\n    r.data.status\n      ? commit(NOTIFICATIONS_SUCCESS, r.data)\n      : dispatch(NOTIFICATIONS_ERROR);\n  },\n\n  [NOTIFICATIONS_FILTER_CHANGE]: ({ commit, dispatch }, { options }) => {\n    commit(NOTIFICATIONS_REQUEST);\n    return new Promise(resolve => {\n      commit(NOTIFICATIONS_FILTER_CHANGE, options);\n      dispatch(NOTIFICATIONS_REQUEST).then(() => resolve());\n    });\n  },\n  [NOTIFICATIONS_READ]: ({dispatch} ) => {\n    dispatch(NOTIFICATIONS_REQUEST);\n\n  },\n  [NOTIFICATIONS_ERROR]: ({ commit, dispatch} ) => {\n    commit(NOTIFICATIONS_ERROR);\n    dispatch(AUTH_LOGOUT);\n  }\n\n};\n\nconst mutations = {\n  [NOTIFICATIONS_REQUEST]: state => {\n    state.status = false;\n  },\n  [NOTIFICATIONS_SUCCESS]: (state, notifications) => {\n    state.status = true;\n    state.total = notifications.total;\n    state.total_new = notifications.total_new;\n    state.total_read = notifications.total_read;\n    if ( !parseInt(state.offset) ) {\n      state.notifications = notifications.notifications;\n    } else {\n      state.notifications = [...state.notifications, notifications.notifications];\n    }\n\n  },\n  [NOTIFICATIONS_FILTER_CHANGE]: (state, options) => {\n    state.status = false;\n    for (let option in options) {\n      state.filter[option] = options[option] != \"\" ? options[option] : state.filter[option];\n    }\n  },\n  [NOTIFICATIONS_ERROR]: state => {\n    state.status = false;\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}