{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/negative.js","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/negative.js","mtime":1586416851414},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgppbXBvcnQgeyBORUdBVElWRV9SRVFVRVNULCBORUdBVElWRV9FUlJPUiwgTkVHQVRJVkVfU1VDQ0VTUywgTkVHQVRJVkVfRklMVEVSIH0gZnJvbSAiLi4vYWN0aW9ucy9uZWdhdGl2ZSI7CmltcG9ydCB7IEFVVEhfTE9HT1VUIH0gZnJvbSAiLi4vYWN0aW9ucy9hdXRoIjsKaW1wb3J0IE1lbnRpb25zU2Vydml2ZSBmcm9tICIuLi8uLi9hcGkvbWVudGlvbnMuc2VydmljZSI7CnZhciBzdGF0ZSA9IHsKICBuZWdhdGl2ZTogW10sCiAgbmVnYXRpdmVfZmlsdGVyOiAxLAogIHN0YXR1czogZmFsc2UsCiAgY291bnQ6IDAKfTsKdmFyIGdldHRlcnMgPSB7CiAgaXNOZWdhdGl2ZUxvYWRlZDogZnVuY3Rpb24gaXNOZWdhdGl2ZUxvYWRlZChzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnN0YXR1czsKICB9LAogIGdldE5lZ2F0aXZlOiBmdW5jdGlvbiBnZXROZWdhdGl2ZShzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLm5lZ2F0aXZlOwogIH0sCiAgZ2V0Q291bnQ6IGZ1bmN0aW9uIGdldENvdW50KHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuY291bnQ7CiAgfSwKICBnZXROZWdhdGl2ZUZpbHRlclN0YXRlOiBmdW5jdGlvbiBnZXROZWdhdGl2ZUZpbHRlclN0YXRlKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUubmVnYXRpdmVfZmlsdGVyOwogIH0KfTsKdmFyIGFjdGlvbnMgPSAoX2FjdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBORUdBVElWRV9SRVFVRVNULCBmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYsIHBlcmlvZCkgewogICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIHI7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7CiAgICAgICAgICAgIGNvbW1pdChORUdBVElWRV9SRVFVRVNUKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBNZW50aW9uc1NlcnZpdmUuZ2V0TmVnYXRpdmVEYXRhKHsKICAgICAgICAgICAgICByZWdpb25faWQ6IHN0YXRlLm5lZ2F0aXZlX2ZpbHRlciB8fCAiIiwKICAgICAgICAgICAgICBwZXJpb2Q6IHBlcmlvZCB8fCAiIgogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIHIgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByLmRhdGEuc3RhdHVzID8gY29tbWl0KE5FR0FUSVZFX1NVQ0NFU1MsIHIuZGF0YSkgOiBkaXNwYXRjaChORUdBVElWRV9FUlJPUik7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyKSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIE5FR0FUSVZFX0ZJTFRFUiwgZnVuY3Rpb24gKF9yZWYzLCBfcmVmNCkgewogIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQsCiAgICAgIGRpc3BhdGNoID0gX3JlZjMuZGlzcGF0Y2g7CiAgdmFyIHJlZ2lvbl9pZCA9IF9yZWY0LnJlZ2lvbl9pZCwKICAgICAgcGVyaW9kID0gX3JlZjQucGVyaW9kOwogIGNvbnNvbGUubG9nKHJlZ2lvbl9pZCk7CiAgY29tbWl0KE5FR0FUSVZFX0ZJTFRFUiwgcmVnaW9uX2lkKTsKICBkaXNwYXRjaChORUdBVElWRV9SRVFVRVNULCBwZXJpb2QpOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBORUdBVElWRV9FUlJPUiwgZnVuY3Rpb24gKF9yZWY1KSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICBjb21taXQoTkVHQVRJVkVfRVJST1IpOwogIGNvbW1pdChBVVRIX0xPR09VVCk7Cn0pLCBfYWN0aW9ucyk7CnZhciBtdXRhdGlvbnMgPSAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTkVHQVRJVkVfUkVRVUVTVCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUuc3RhdHVzID0gZmFsc2U7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgTkVHQVRJVkVfU1VDQ0VTUywgZnVuY3Rpb24gKHN0YXRlLCBtZW50aW9ucykgewogIHN0YXRlLm5lZ2F0aXZlID0gbWVudGlvbnMubWVudGlvbnM7CiAgc3RhdGUuY291bnQgPSBtZW50aW9ucy5tZW50aW9uc190b3RhbDsKICBzdGF0ZS5zdGF0dXMgPSB0cnVlOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE5FR0FUSVZFX0ZJTFRFUiwgZnVuY3Rpb24gKHN0YXRlLCBjb3VudHJ5X2lkKSB7CiAgc3RhdGUuc3RhdHVzID0gdHJ1ZTsKICBzdGF0ZS5uZWdhdGl2ZV9maWx0ZXIgPSBjb3VudHJ5X2lkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE5FR0FUSVZFX0VSUk9SLCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5zdGF0dXMgPSBmYWxzZTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBBVVRIX0xPR09VVCwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgc3RhdGUubmVnYXRpdmUgPSBbXTsKICBzdGF0ZS5uZWdhdGl2ZV9maWx0ZXIgPSAxOwogIHN0YXRlLnN0YXR1cyA9IGZhbHNlOwogIHN0YXRlLmNvdW50ID0gMDsKfSksIF9tdXRhdGlvbnMpOwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/negative.js"],"names":["NEGATIVE_REQUEST","NEGATIVE_ERROR","NEGATIVE_SUCCESS","NEGATIVE_FILTER","AUTH_LOGOUT","MentionsServive","state","negative","negative_filter","status","count","getters","isNegativeLoaded","getNegative","getCount","getNegativeFilterState","actions","period","commit","dispatch","getNegativeData","region_id","r","data","console","log","mutations","mentions","mentions_total","country_id"],"mappings":"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","sourcesContent":["import {\n  NEGATIVE_REQUEST,\n  NEGATIVE_ERROR,\n  NEGATIVE_SUCCESS,\n  NEGATIVE_FILTER\n} from \"../actions/negative\";\n\nimport { AUTH_LOGOUT } from \"../actions/auth\";\nimport MentionsServive from \"../../api/mentions.service\";\n\n\nconst state = {\n  negative: [],\n  negative_filter: 1,\n  status: false,\n  count: 0\n};\n\nconst getters = {\n  isNegativeLoaded: state => state.status,\n  getNegative: state => state.negative,\n  getCount: state => state.count,\n  getNegativeFilterState: state => state.negative_filter\n};\n\nconst actions = {\n\n  [NEGATIVE_REQUEST]: async ({ commit, dispatch }, period) => {\n    commit(NEGATIVE_REQUEST);\n    const r = await MentionsServive.getNegativeData({\n      region_id: state.negative_filter || \"\",\n      period: period || \"\"\n    });\n    r.data.status\n      ? commit(NEGATIVE_SUCCESS, r.data )\n      : dispatch(NEGATIVE_ERROR);\n  },\n\n  [NEGATIVE_FILTER]: ({ commit, dispatch }, { region_id, period }) => {\n    console.log(region_id);\n    commit(NEGATIVE_FILTER, region_id);\n    dispatch(NEGATIVE_REQUEST, period);\n  },\n\n  [NEGATIVE_ERROR]: ({commit}) => {\n    commit(NEGATIVE_ERROR);\n    commit(AUTH_LOGOUT);\n  }\n};\n\nconst mutations = {\n  [NEGATIVE_REQUEST]: state => {\n    state.status = false;\n  },\n\n  [NEGATIVE_SUCCESS]: (state, mentions) => {\n    state.negative = mentions.mentions;\n    state.count = mentions.mentions_total;\n    state.status = true;\n  },\n\n  [NEGATIVE_FILTER]: (state, country_id) => {\n    state.status = true;\n    state.negative_filter = country_id;\n  },\n\n  [NEGATIVE_ERROR]: state => {\n    state.status = false;\n  },\n\n  [AUTH_LOGOUT]: state => {\n    state.negative = [];\n    state.negative_filter = 1;\n    state.status = false;\n    state.count = 0;\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}