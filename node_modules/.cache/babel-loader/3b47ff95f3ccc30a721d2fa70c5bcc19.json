{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/charts-map.js","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/charts-map.js","mtime":1586389619480},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvaW5tZTEvUGhwc3Rvcm1Qcm9qZWN0cy9uZXctY3AvZGV2ZWxvcC5pbm1lLWdtYWlsLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Cgp2YXIgX2FjdGlvbnMsIF9tdXRhdGlvbnM7CgppbXBvcnQgeyBNQVBfUkVRVUVTVCwgTUFQX1NVQ0NFU1MsIE1BUF9QUkVMT0FELCBNQVBfU1dJVENILCBNQVBfRVJST1IgfSBmcm9tICIuLi9hY3Rpb25zL2NoYXJ0cy1tYXAiOwppbXBvcnQgRGF0YVNlcnZpY2UgZnJvbSAiLi4vLi4vYXBpL2RhdGEuc2VydmljZSI7CmltcG9ydCB7IEFVVEhfTE9HT1VUIH0gZnJvbSAiLi4vYWN0aW9ucy9hdXRoIjsKaW1wb3J0IG1hcERhdGFNb2RlbCBmcm9tICIuLi9tb2RlbHMvbWFwIjsKdmFyIHN0YXRlID0gbWFwRGF0YU1vZGVsKCk7CnZhciBnZXR0ZXJzID0gewogIGdldE1hcFBlcmlvZDogZnVuY3Rpb24gZ2V0TWFwUGVyaW9kKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucGVyaW9kOwogIH0sCiAgZ2V0TWFwRGF0YTogZnVuY3Rpb24gZ2V0TWFwRGF0YShzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmRhdGFbc3RhdGUucGVyaW9kXTsKICB9LAogIGlzTWFwTG9hZGVkOiBmdW5jdGlvbiBpc01hcExvYWRlZChzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLmRhdGFzZXRzID09PSAzOwogIH0sCiAgaXNNYXBQcmVsb2FkOiBmdW5jdGlvbiBpc01hcFByZWxvYWQoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5kYXRhc2V0cyA+IDA7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIE1BUF9SRVFVRVNULCBmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYpIHsKICAgIHZhciBjb21taXQsCiAgICAgICAgZGlzcGF0Y2gsCiAgICAgICAgcGVyaW9kLAogICAgICAgIHIsCiAgICAgICAgX2FyZ3MgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7CiAgICAgICAgICAgIHBlcmlvZCA9IF9hcmdzLmxlbmd0aCA+IDEgJiYgX2FyZ3NbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmdzWzFdIDogc3RhdGUucGVyaW9kOwogICAgICAgICAgICBjb21taXQoTUFQX1JFUVVFU1QpOwoKICAgICAgICAgICAgaWYgKHN0YXRlLmRhdGFbcGVyaW9kXS5sZW5ndGgpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBEYXRhU2VydmljZS5nZXRNYXBEYXRhKHBlcmlvZCk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICByID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgci5zdGF0dXMuZGF0YS5zdGF0dXMgPyBjb21taXQoTUFQX1NVQ0NFU1MsIHsKICAgICAgICAgICAgICBkYXRhOiByLmRhdGEsCiAgICAgICAgICAgICAgcGVyaW9kOiBwZXJpb2QKICAgICAgICAgICAgfSkgOiBkaXNwYXRjaChBVVRIX0xPR09VVCk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBkaXNwYXRjaChNQVBfUFJFTE9BRCk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBNQVBfUFJFTE9BRCwgZnVuY3Rpb24gKF9yZWYzKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICBzdGF0ZS5wZXJpb2RzLmZvckVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHApIHsKICAgICAgdmFyIHI7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKHN0YXRlLmRhdGFbcC5pZF0ubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gRGF0YVNlcnZpY2UuZ2V0TWFwRGF0YShwLmlkKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KE1BUF9TVUNDRVNTLCB7CiAgICAgICAgICAgICAgICBkYXRhOiByLmRhdGEsCiAgICAgICAgICAgICAgICBwZXJpb2Q6IHAuaWQKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfSgpKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgTUFQX1NXSVRDSCwgZnVuY3Rpb24gKF9yZWY1LCBwZXJpb2QpIHsKICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogIGNvbW1pdChNQVBfU1dJVENILCBwZXJpb2QpOwp9KSwgX2FjdGlvbnMpOwp2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE1BUF9SRVFVRVNULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5sb2FkZWQgPSBmYWxzZTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBNQVBfU1VDQ0VTUywgZnVuY3Rpb24gKHN0YXRlLCByZXNwb25zZSkgewogIHN0YXRlLmRhdGFbcmVzcG9uc2UucGVyaW9kXSA9IHJlc3BvbnNlLmRhdGE7CiAgc3RhdGUubG9hZGVkID0gdHJ1ZTsKICBzdGF0ZS5kYXRhc2V0cyArPSAxOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE1BUF9TV0lUQ0gsIGZ1bmN0aW9uIChzdGF0ZSwgcGVyaW9kKSB7CiAgc3RhdGUucGVyaW9kID0gcGVyaW9kOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFVVEhfTE9HT1VULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBPYmplY3QuYXNzaWduKHN0YXRlLCBtYXBEYXRhTW9kZWwoKSk7Cn0pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/charts-map.js"],"names":["MAP_REQUEST","MAP_SUCCESS","MAP_PRELOAD","MAP_SWITCH","MAP_ERROR","DataService","AUTH_LOGOUT","mapDataModel","state","getters","getMapPeriod","period","getMapData","data","isMapLoaded","datasets","isMapPreload","actions","commit","dispatch","length","r","status","periods","forEach","p","id","mutations","loaded","response","Object","assign"],"mappings":"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","sourcesContent":["import {\n  MAP_REQUEST,\n  MAP_SUCCESS,\n  MAP_PRELOAD,\n  MAP_SWITCH,\n  MAP_ERROR\n} from \"../actions/charts-map\";\n\nimport DataService from \"../../api/data.service\";\nimport { AUTH_LOGOUT } from \"../actions/auth\";\nimport mapDataModel from \"../models/map\";\n\nconst state = mapDataModel();\n\nconst getters = {\n  getMapPeriod: state => state.period,\n  getMapData: state => state.data[state.period],\n  isMapLoaded: state => state.datasets === 3,\n  isMapPreload: state => state.datasets > 0,\n};\n\nconst actions = {\n  [MAP_REQUEST]: async ({ commit, dispatch }, period = state.period) => {\n    commit(MAP_REQUEST);\n    if (!state.data[period].length) {\n      const r = await DataService.getMapData(period);\n      r.status.data.status\n        ? commit(MAP_SUCCESS, { data: r.data, period: period })\n        : dispatch(AUTH_LOGOUT);\n    }\n    dispatch(MAP_PRELOAD);\n  },\n  [MAP_PRELOAD]: ({ commit }) => {\n    state.periods.forEach(async p => {\n      if (!state.data[p.id].length) {\n        const r = await DataService.getMapData(p.id);\n        commit(MAP_SUCCESS, { data: r.data, period: p.id });\n      }\n    });\n  },\n  [MAP_SWITCH]: ({ commit }, period) => {\n    commit(MAP_SWITCH, period);\n  }\n};\n\nconst mutations = {\n  [MAP_REQUEST]: state => {\n    state.loaded = false;\n  },\n  [MAP_SUCCESS]: (state, response) => {\n    state.data[response.period] = response.data;\n    state.loaded = true;\n    state.datasets += 1;\n  },\n  [MAP_SWITCH]: (state, period) => {\n    state.period = period;\n  },\n  [AUTH_LOGOUT]: state => {\n    Object.assign(state, mapDataModel());\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}