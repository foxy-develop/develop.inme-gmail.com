{"remainingRequest":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js!/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/charts-map.js","dependencies":[{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/charts-map.js","mtime":1586427724656},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2lubWUxL1BocHN0b3JtUHJvamVjdHMvbmV3LWNwL2RldmVsb3AuaW5tZS1nbWFpbC5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2lubWUxL1BocHN0b3JtUHJvamVjdHMvbmV3LWNwL2RldmVsb3AuaW5tZS1nbWFpbC5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwoKdmFyIF9hY3Rpb25zLCBfbXV0YXRpb25zOwoKaW1wb3J0IHsgTUFQX1JFUVVFU1QsIE1BUF9TVUNDRVNTLCBNQVBfUFJFTE9BRCwgTUFQX1NXSVRDSCwgTUFQX0VSUk9SIH0gZnJvbSAiLi4vYWN0aW9ucy9jaGFydHMtbWFwIjsKaW1wb3J0IERhdGFTZXJ2aWNlIGZyb20gIi4uLy4uL2FwaS9kYXRhLnNlcnZpY2UiOwppbXBvcnQgeyBBVVRIX0xPR09VVCB9IGZyb20gIi4uL2FjdGlvbnMvYXV0aCI7CmltcG9ydCBtYXBEYXRhTW9kZWwgZnJvbSAiLi4vbW9kZWxzL21hcCI7CnZhciBzdGF0ZSA9IG1hcERhdGFNb2RlbCgpOwp2YXIgZ2V0dGVycyA9IHsKICBnZXRNYXBQZXJpb2Q6IGZ1bmN0aW9uIGdldE1hcFBlcmlvZChzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnBlcmlvZDsKICB9LAogIGdldE1hcERhdGE6IGZ1bmN0aW9uIGdldE1hcERhdGEoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5kYXRhW3N0YXRlLnBlcmlvZF07CiAgfSwKICBnZXRDb3VudHJ5RGF0YTogZnVuY3Rpb24gZ2V0Q291bnRyeURhdGEoc3RhdGUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAocGVyaW9kKSB7CiAgICAgIHJldHVybiBzdGF0ZS5kYXRhKHBlcmlvZCk7CiAgICB9OwogIH0sCiAgaXNNYXBMb2FkZWQ6IGZ1bmN0aW9uIGlzTWFwTG9hZGVkKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuZGF0YXNldHMgPT09IDM7CiAgfSwKICBnZXRTZWxlY3RlZENvdW50cnk6IGZ1bmN0aW9uIGdldFNlbGVjdGVkQ291bnRyeShzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChpZCkgewogICAgICByZXR1cm4gc3RhdGUuZGF0YVtzdGF0ZS5wZXJpb2RdLmZpbHRlcihmdW5jdGlvbiAoZWwpIHsKICAgICAgICByZXR1cm4gTnVtYmVyKGVsLnJlZ2lvbl9pZCkgPT09IE51bWJlcihpZCk7CiAgICAgIH0pLm1hcChmdW5jdGlvbiAoZWwpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgaWQ6IGVsLnJlZ2lvbl9pZCwKICAgICAgICAgIHNlbGVjdGVkOiB0cnVlLAogICAgICAgICAgdGl0bGU6IGVsLm5hbWUsCiAgICAgICAgICB0aXRsZV9zaG9ydDogZWwuaWQsCiAgICAgICAgICB2YWx1ZTogZWwudmFsdWVfbmVnYXRpdmUKICAgICAgICB9OwogICAgICB9KVswXTsKICAgIH07CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIE1BUF9SRVFVRVNULCBmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYpIHsKICAgIHZhciBjb21taXQsCiAgICAgICAgZGlzcGF0Y2gsCiAgICAgICAgcGVyaW9kLAogICAgICAgIHIsCiAgICAgICAgX2FyZ3MgPSBhcmd1bWVudHM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7CiAgICAgICAgICAgIHBlcmlvZCA9IF9hcmdzLmxlbmd0aCA+IDEgJiYgX2FyZ3NbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmdzWzFdIDogc3RhdGUucGVyaW9kOwogICAgICAgICAgICBjb21taXQoTUFQX1JFUVVFU1QpOwoKICAgICAgICAgICAgaWYgKHN0YXRlLmRhdGFbcGVyaW9kXS5sZW5ndGgpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBEYXRhU2VydmljZS5nZXRNYXBEYXRhKHBlcmlvZCk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICByID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgci5zdGF0dXMuZGF0YS5zdGF0dXMgPyBjb21taXQoTUFQX1NVQ0NFU1MsIHsKICAgICAgICAgICAgICBkYXRhOiByLmRhdGEsCiAgICAgICAgICAgICAgcGVyaW9kOiBwZXJpb2QKICAgICAgICAgICAgfSkgOiBkaXNwYXRjaChBVVRIX0xPR09VVCk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBkaXNwYXRjaChNQVBfUFJFTE9BRCk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25zLCBNQVBfUFJFTE9BRCwgZnVuY3Rpb24gKF9yZWYzKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICBzdGF0ZS5wZXJpb2RzLmZvckVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHApIHsKICAgICAgdmFyIHI7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKHN0YXRlLmRhdGFbcC5pZF0ubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gRGF0YVNlcnZpY2UuZ2V0TWFwRGF0YShwLmlkKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KE1BUF9TVUNDRVNTLCB7CiAgICAgICAgICAgICAgICBkYXRhOiByLmRhdGEsCiAgICAgICAgICAgICAgICBwZXJpb2Q6IHAuaWQKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfSgpKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgTUFQX1NXSVRDSCwgZnVuY3Rpb24gKF9yZWY1LCBwZXJpb2QpIHsKICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogIGNvbW1pdChNQVBfU1dJVENILCBwZXJpb2QpOwp9KSwgX2FjdGlvbnMpOwp2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE1BUF9SRVFVRVNULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBzdGF0ZS5sb2FkZWQgPSBmYWxzZTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBNQVBfU1VDQ0VTUywgZnVuY3Rpb24gKHN0YXRlLCByZXNwb25zZSkgewogIHN0YXRlLmRhdGFbcmVzcG9uc2UucGVyaW9kXSA9IHJlc3BvbnNlLmRhdGE7CiAgc3RhdGUubG9hZGVkID0gdHJ1ZTsKICBzdGF0ZS5kYXRhc2V0cyArPSAxOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE1BUF9TV0lUQ0gsIGZ1bmN0aW9uIChzdGF0ZSwgcGVyaW9kKSB7CiAgc3RhdGUucGVyaW9kID0gcGVyaW9kOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIEFVVEhfTE9HT1VULCBmdW5jdGlvbiAoc3RhdGUpIHsKICBPYmplY3QuYXNzaWduKHN0YXRlLCBtYXBEYXRhTW9kZWwoKSk7Cn0pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/inme1/PhpstormProjects/new-cp/develop.inme-gmail.com/src/store/modules/charts-map.js"],"names":["MAP_REQUEST","MAP_SUCCESS","MAP_PRELOAD","MAP_SWITCH","MAP_ERROR","DataService","AUTH_LOGOUT","mapDataModel","state","getters","getMapPeriod","period","getMapData","data","getCountryData","isMapLoaded","datasets","getSelectedCountry","id","filter","el","Number","region_id","map","selected","title","name","title_short","value","value_negative","actions","commit","dispatch","length","r","status","periods","forEach","p","mutations","loaded","response","Object","assign"],"mappings":"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","sourcesContent":["import {\n  MAP_REQUEST,\n  MAP_SUCCESS,\n  MAP_PRELOAD,\n  MAP_SWITCH,\n  MAP_ERROR\n} from \"../actions/charts-map\";\n\nimport DataService from \"../../api/data.service\";\nimport { AUTH_LOGOUT } from \"../actions/auth\";\nimport mapDataModel from \"../models/map\";\n\nconst state = mapDataModel();\n\nconst getters = {\n  getMapPeriod: state => state.period,\n  getMapData: state => state.data[state.period],\n  getCountryData: state => period => state.data(period),\n  isMapLoaded: state => state.datasets === 3,\n  getSelectedCountry: state => id => state.data[state.period].filter(el => Number(el.region_id) === Number(id)).map(el => {\n    return {\n      id: el.region_id,\n      selected: true,\n      title: el.name,\n      title_short: el.id,\n      value: el.value_negative\n    }\n  })[0]\n};\n\nconst actions = {\n  [MAP_REQUEST]: async ({ commit, dispatch }, period = state.period) => {\n    commit(MAP_REQUEST);\n    if (!state.data[period].length) {\n      const r = await DataService.getMapData(period);\n      r.status.data.status\n        ? commit(MAP_SUCCESS, { data: r.data, period: period })\n        : dispatch(AUTH_LOGOUT);\n    }\n    dispatch(MAP_PRELOAD);\n  },\n  [MAP_PRELOAD]: ({ commit }) => {\n    state.periods.forEach(async p => {\n      if (!state.data[p.id].length) {\n        const r = await DataService.getMapData(p.id);\n        commit(MAP_SUCCESS, { data: r.data, period: p.id });\n      }\n    });\n  },\n  [MAP_SWITCH]: ({ commit }, period) => {\n    commit(MAP_SWITCH, period);\n  }\n};\n\nconst mutations = {\n  [MAP_REQUEST]: state => {\n    state.loaded = false;\n  },\n  [MAP_SUCCESS]: (state, response) => {\n    state.data[response.period] = response.data;\n    state.loaded = true;\n    state.datasets += 1;\n  },\n  [MAP_SWITCH]: (state, period) => {\n    state.period = period;\n  },\n  [AUTH_LOGOUT]: state => {\n    Object.assign(state, mapDataModel());\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}